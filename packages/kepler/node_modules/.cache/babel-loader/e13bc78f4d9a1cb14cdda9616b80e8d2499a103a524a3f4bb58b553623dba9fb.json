{"ast":null,"code":"/*!\n * satellite-js v5.0.0\n * (c) 2013 Shashwat Kandadai and UCSC\n * https://github.com/shashwatak/satellite-js\n * License: MIT\n */\n\nvar pi = Math.PI;\nvar twoPi = pi * 2;\nvar deg2rad = pi / 180.0;\nvar rad2deg = 180 / pi;\nvar minutesPerDay = 1440.0;\nvar mu = 398600.8; // in km3 / s2\nvar earthRadius = 6378.135; // in km\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\nvar vkmpersec = earthRadius * xke / 60.0;\nvar tumin = 1.0 / xke;\nvar j2 = 0.001082616;\nvar j3 = -0.00000253881;\nvar j4 = -0.00000165597;\nvar j3oj2 = j3 / j2;\nvar x2o3 = 2.0 / 3.0;\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  deg2rad: deg2rad,\n  earthRadius: earthRadius,\n  j2: j2,\n  j3: j3,\n  j3oj2: j3oj2,\n  j4: j4,\n  minutesPerDay: minutesPerDay,\n  mu: mu,\n  pi: pi,\n  rad2deg: rad2deg,\n  tumin: tumin,\n  twoPi: twoPi,\n  vkmpersec: vkmpersec,\n  x2o3: x2o3,\n  xke: xke\n});\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure days2mdhms\n *\n *  this procedure converts the day of the year, days, to the equivalent month\n *    day, hour, minute and second.\n *\n *  algorithm     : set up array for the number of days per month\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  loop through a temp value while the value is < the days\n *                  perform int conversions to the correct day and month\n *                  convert remainder into h m s using type conversions\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    days        - julian day of the year         0.0  .. 366.0\n *\n *  outputs       :\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    dayofyr     - day of year\n *    temp        - temporary extended values\n *    inttemp     - temporary int value\n *    i           - index\n *    lmonth[12]  - int array containing the number of days per month\n *\n *  coupling      :\n *    none.\n * --------------------------------------------------------------------------- */\nfunction days2mdhms(year, days) {\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var dayofyr = Math.floor(days);\n\n  //  ----------------- find month and day of month ----------------\n  var i = 1;\n  var inttemp = 0;\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\n    inttemp += lmonth[i - 1];\n    i += 1;\n  }\n  var mon = i;\n  var day = dayofyr - inttemp;\n\n  //  ----------------- find hours minutes and seconds -------------\n  var temp = (days - dayofyr) * 24.0;\n  var hr = Math.floor(temp);\n  temp = (temp - hr) * 60.0;\n  var minute = Math.floor(temp);\n  var sec = (temp - minute) * 60.0;\n  return {\n    mon: mon,\n    day: day,\n    hr: hr,\n    minute: minute,\n    sec: sec\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure jday\n *\n *  this procedure finds the julian date given the year, month, day, and time.\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\n *\n *  algorithm     : calculate the answer in one step for efficiency\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - universal time hour            0 .. 23\n *    min         - universal time min             0 .. 59\n *    sec         - universal time sec             0.0 .. 59.999\n *\n *  outputs       :\n *    jd          - julian date                    days from 4713 bc\n *\n *  locals        :\n *    none.\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    vallado       2007, 189, alg 14, ex 3-14\n *\n * --------------------------------------------------------------------------- */\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n  ;\n}\nfunction jday(year, mon, day, hr, minute, sec, msec) {\n  if (year instanceof Date) {\n    var date = year;\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1,\n    // Note, this function requires months in range 1-12.\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  }\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure invjday\n *\n *  this procedure finds the year, month, day, hour, minute and second\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\n *\n *  algorithm     : set up starting values\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  find the elapsed days through the year in a loop\n *                  call routine to find each individual value\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jd          - julian date                    days from 4713 bc\n *\n *  outputs       :\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    days        - day of year plus fractional\n *                  portion of a day               days\n *    tu          - julian centuries from 0 h\n *                  jan 0, 1900\n *    temp        - temporary double values\n *    leapyrs     - number of leap years from 1900\n *\n *  coupling      :\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\n *\n *  references    :\n *    vallado       2007, 208, alg 22, ex 3-13\n * --------------------------------------------------------------------------- */\nfunction invjday(jd, asArray) {\n  // --------------- find year and days of the year -\n  var temp = jd - 2415019.5;\n  var tu = temp / 365.25;\n  var year = 1900 + Math.floor(tu);\n  var leapyrs = Math.floor((year - 1901) * 0.25);\n\n  // optional nudge by 8.64x10-7 sec to get even outputs\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001;\n\n  // ------------ check for case of beginning of a year -----------\n  if (days < 1.0) {\n    year -= 1;\n    leapyrs = Math.floor((year - 1901) * 0.25);\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\n  }\n\n  // ----------------- find remaing data  -------------------------\n  var mdhms = days2mdhms(year, days);\n  var mon = mdhms.mon,\n    day = mdhms.day,\n    hr = mdhms.hr,\n    minute = mdhms.minute;\n  var sec = mdhms.sec - 0.00000086400;\n  if (asArray) {\n    return [year, mon, day, hr, minute, Math.floor(sec)];\n  }\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure dpper\n *\n *  this procedure provides deep space long period periodic contributions\n *    to the mean elements.  by design, these periodics are zero at epoch.\n *    this used to be dscom which included initialization, but it's really a\n *    recurring function.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    e3          -\n *    ee2         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\n *    t           -\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\n *    zmol        -\n *    zmos        -\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclo       - inclination - needed for lyddane modification\n *    nodep       - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  outputs       :\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclp       - inclination\n *    nodep        - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  locals        :\n *    alfdp       -\n *    betdp       -\n *    cosip  , sinip  , cosop  , sinop  ,\n *    dalf        -\n *    dbet        -\n *    dls         -\n *    f2, f3      -\n *    pe          -\n *    pgh         -\n *    ph          -\n *    pinc        -\n *    pl          -\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\n *    sll   , sls\n *    xls         -\n *    xnoh        -\n *    zf          -\n *    zm          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dpper(satrec, options) {\n  var e3 = satrec.e3,\n    ee2 = satrec.ee2,\n    peo = satrec.peo,\n    pgho = satrec.pgho,\n    pho = satrec.pho,\n    pinco = satrec.pinco,\n    plo = satrec.plo,\n    se2 = satrec.se2,\n    se3 = satrec.se3,\n    sgh2 = satrec.sgh2,\n    sgh3 = satrec.sgh3,\n    sgh4 = satrec.sgh4,\n    sh2 = satrec.sh2,\n    sh3 = satrec.sh3,\n    si2 = satrec.si2,\n    si3 = satrec.si3,\n    sl2 = satrec.sl2,\n    sl3 = satrec.sl3,\n    sl4 = satrec.sl4,\n    t = satrec.t,\n    xgh2 = satrec.xgh2,\n    xgh3 = satrec.xgh3,\n    xgh4 = satrec.xgh4,\n    xh2 = satrec.xh2,\n    xh3 = satrec.xh3,\n    xi2 = satrec.xi2,\n    xi3 = satrec.xi3,\n    xl2 = satrec.xl2,\n    xl3 = satrec.xl3,\n    xl4 = satrec.xl4,\n    zmol = satrec.zmol,\n    zmos = satrec.zmos;\n  var init = options.init,\n    opsmode = options.opsmode;\n  var ep = options.ep,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    argpp = options.argpp,\n    mp = options.mp;\n\n  // Copy satellite attributes into local variables for convenience\n  // and symmetry in writing formulae.\n\n  var alfdp;\n  var betdp;\n  var cosip;\n  var sinip;\n  var cosop;\n  var sinop;\n  var dalf;\n  var dbet;\n  var dls;\n  var f2;\n  var f3;\n  var pe;\n  var pgh;\n  var ph;\n  var pinc;\n  var pl;\n  var sinzf;\n  var xls;\n  var xnoh;\n  var zf;\n  var zm;\n\n  //  ---------------------- constants -----------------------------\n  var zns = 1.19459e-5;\n  var zes = 0.01675;\n  var znl = 1.5835218e-4;\n  var zel = 0.05490;\n\n  //  --------------- calculate time varying periodics -----------\n  zm = zmos + zns * t;\n\n  // be sure that the initial call has time set to zero\n  if (init === 'y') {\n    zm = zmos;\n  }\n  zf = zm + 2.0 * zes * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var ses = se2 * f2 + se3 * f3;\n  var sis = si2 * f2 + si3 * f3;\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\n  var shs = sh2 * f2 + sh3 * f3;\n  zm = zmol + znl * t;\n  if (init === 'y') {\n    zm = zmol;\n  }\n  zf = zm + 2.0 * zel * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var sel = ee2 * f2 + e3 * f3;\n  var sil = xi2 * f2 + xi3 * f3;\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\n  var shll = xh2 * f2 + xh3 * f3;\n  pe = ses + sel;\n  pinc = sis + sil;\n  pl = sls + sll;\n  pgh = sghs + sghl;\n  ph = shs + shll;\n  if (init === 'n') {\n    pe -= peo;\n    pinc -= pinco;\n    pl -= plo;\n    pgh -= pgho;\n    ph -= pho;\n    inclp += pinc;\n    ep += pe;\n    sinip = Math.sin(inclp);\n    cosip = Math.cos(inclp);\n\n    /* ----------------- apply periodics directly ------------ */\n    // sgp4fix for lyddane choice\n    // strn3 used original inclination - this is technically feasible\n    // gsfc used perturbed inclination - also technically feasible\n    // probably best to readjust the 0.2 limit value and limit discontinuity\n    // 0.2 rad = 11.45916 deg\n    // use next line for original strn3 approach and original inclination\n    // if (inclo >= 0.2)\n    // use next line for gsfc version and perturbed inclination\n    if (inclp >= 0.2) {\n      ph /= sinip;\n      pgh -= cosip * ph;\n      argpp += pgh;\n      nodep += ph;\n      mp += pl;\n    } else {\n      //  ---- apply periodics with lyddane modification ----\n      sinop = Math.sin(nodep);\n      cosop = Math.cos(nodep);\n      alfdp = sinip * sinop;\n      betdp = sinip * cosop;\n      dalf = ph * cosop + pinc * cosip * sinop;\n      dbet = -ph * sinop + pinc * cosip * cosop;\n      alfdp += dalf;\n      betdp += dbet;\n      nodep %= twoPi;\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      xls = mp + argpp + cosip * nodep;\n      dls = pl + pgh - pinc * nodep * sinip;\n      xls += dls;\n      xnoh = nodep;\n      nodep = Math.atan2(alfdp, betdp);\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      if (Math.abs(xnoh - nodep) > pi) {\n        if (nodep < xnoh) {\n          nodep += twoPi;\n        } else {\n          nodep -= twoPi;\n        }\n      }\n      mp += pl;\n      argpp = xls - mp - cosip * nodep;\n    }\n  }\n  return {\n    ep: ep,\n    inclp: inclp,\n    nodep: nodep,\n    argpp: argpp,\n    mp: mp\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dscom\n *\n *  this procedure provides deep space common items used by both the secular\n *    and periodics subroutines.  input is provided as shown. this routine\n *    used to be called dpper, but the functions inside weren't well organized.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    epoch       -\n *    ep          - eccentricity\n *    argpp       - argument of perigee\n *    tc          -\n *    inclp       - inclination\n *    nodep       - right ascension of ascending node\n *    np          - mean motion\n *\n *  outputs       :\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\n *    day         -\n *    e3          -\n *    ee2         -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    gam         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    rtemsq      -\n *    se2, se3         -\n *    sgh2, sgh3, sgh4        -\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\n *    nm          - mean motion\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *    zmol        -\n *    zmos        -\n *\n *  locals        :\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\n *    betasq      -\n *    cc          -\n *    ctem, stem        -\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\n *    xnodce      -\n *    xnoi        -\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\n *    zcosi  , zsini  , zcosil , zsinil ,\n *    zx          -\n *    zy          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dscom(options) {\n  var epoch = options.epoch,\n    ep = options.ep,\n    argpp = options.argpp,\n    tc = options.tc,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    np = options.np;\n  var a1;\n  var a2;\n  var a3;\n  var a4;\n  var a5;\n  var a6;\n  var a7;\n  var a8;\n  var a9;\n  var a10;\n  var cc;\n  var x1;\n  var x2;\n  var x3;\n  var x4;\n  var x5;\n  var x6;\n  var x7;\n  var x8;\n  var zcosg;\n  var zsing;\n  var zcosh;\n  var zsinh;\n  var zcosi;\n  var zsini;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var ss6;\n  var ss7;\n  var sz1;\n  var sz2;\n  var sz3;\n  var sz11;\n  var sz12;\n  var sz13;\n  var sz21;\n  var sz22;\n  var sz23;\n  var sz31;\n  var sz32;\n  var sz33;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var s6;\n  var s7;\n  var z1;\n  var z2;\n  var z3;\n  var z11;\n  var z12;\n  var z13;\n  var z21;\n  var z22;\n  var z23;\n  var z31;\n  var z32;\n  var z33;\n\n  // -------------------------- constants -------------------------\n  var zes = 0.01675;\n  var zel = 0.05490;\n  var c1ss = 2.9864797e-6;\n  var c1l = 4.7968065e-7;\n  var zsinis = 0.39785416;\n  var zcosis = 0.91744867;\n  var zcosgs = 0.1945905;\n  var zsings = -0.98088458;\n\n  //  --------------------- local variables ------------------------\n  var nm = np;\n  var em = ep;\n  var snodm = Math.sin(nodep);\n  var cnodm = Math.cos(nodep);\n  var sinomm = Math.sin(argpp);\n  var cosomm = Math.cos(argpp);\n  var sinim = Math.sin(inclp);\n  var cosim = Math.cos(inclp);\n  var emsq = em * em;\n  var betasq = 1.0 - emsq;\n  var rtemsq = Math.sqrt(betasq);\n\n  //  ----------------- initialize lunar solar terms ---------------\n  var peo = 0.0;\n  var pinco = 0.0;\n  var plo = 0.0;\n  var pgho = 0.0;\n  var pho = 0.0;\n  var day = epoch + 18261.5 + tc / 1440.0;\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\n  var stem = Math.sin(xnodce);\n  var ctem = Math.cos(xnodce);\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\n  var zsinhl = 0.089683511 * stem / zsinil;\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\n  var gam = 5.8351514 + 0.0019443680 * day;\n  var zx = 0.39785416 * stem / zsinil;\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\n  zx = Math.atan2(zx, zy);\n  zx += gam - xnodce;\n  var zcosgl = Math.cos(zx);\n  var zsingl = Math.sin(zx);\n\n  //  ------------------------- do solar terms ---------------------\n  zcosg = zcosgs;\n  zsing = zsings;\n  zcosi = zcosis;\n  zsini = zsinis;\n  zcosh = cnodm;\n  zsinh = snodm;\n  cc = c1ss;\n  var xnoi = 1.0 / nm;\n  var lsflg = 0;\n  while (lsflg < 2) {\n    lsflg += 1;\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\n    a8 = zsing * zsini;\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\n    a10 = zcosg * zsini;\n    a2 = cosim * a7 + sinim * a8;\n    a4 = cosim * a9 + sinim * a10;\n    a5 = -sinim * a7 + cosim * a8;\n    a6 = -sinim * a9 + cosim * a10;\n    x1 = a1 * cosomm + a2 * sinomm;\n    x2 = a3 * cosomm + a4 * sinomm;\n    x3 = -a1 * sinomm + a2 * cosomm;\n    x4 = -a3 * sinomm + a4 * cosomm;\n    x5 = a5 * sinomm;\n    x6 = a6 * sinomm;\n    x7 = a5 * cosomm;\n    x8 = a6 * cosomm;\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\n    z1 = z1 + z1 + betasq * z31;\n    z2 = z2 + z2 + betasq * z32;\n    z3 = z3 + z3 + betasq * z33;\n    s3 = cc * xnoi;\n    s2 = -0.5 * s3 / rtemsq;\n    s4 = s3 * rtemsq;\n    s1 = -15.0 * em * s4;\n    s5 = x1 * x3 + x2 * x4;\n    s6 = x2 * x3 + x1 * x4;\n    s7 = x2 * x4 - x1 * x3;\n\n    //  ----------------------- do lunar terms -------------------\n    if (lsflg === 1) {\n      ss1 = s1;\n      ss2 = s2;\n      ss3 = s3;\n      ss4 = s4;\n      ss5 = s5;\n      ss6 = s6;\n      ss7 = s7;\n      sz1 = z1;\n      sz2 = z2;\n      sz3 = z3;\n      sz11 = z11;\n      sz12 = z12;\n      sz13 = z13;\n      sz21 = z21;\n      sz22 = z22;\n      sz23 = z23;\n      sz31 = z31;\n      sz32 = z32;\n      sz33 = z33;\n      zcosg = zcosgl;\n      zsing = zsingl;\n      zcosi = zcosil;\n      zsini = zsinil;\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\n      cc = c1l;\n    }\n  }\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi;\n\n  //  ------------------------ do solar terms ----------------------\n  var se2 = 2.0 * ss1 * ss6;\n  var se3 = 2.0 * ss1 * ss7;\n  var si2 = 2.0 * ss2 * sz12;\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\n  var sl2 = -2.0 * ss3 * sz2;\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\n  var sgh2 = 2.0 * ss4 * sz32;\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\n  var sgh4 = -18.0 * ss4 * zes;\n  var sh2 = -2.0 * ss2 * sz22;\n  var sh3 = -2.0 * ss2 * (sz23 - sz21);\n\n  //  ------------------------ do lunar terms ----------------------\n  var ee2 = 2.0 * s1 * s6;\n  var e3 = 2.0 * s1 * s7;\n  var xi2 = 2.0 * s2 * z12;\n  var xi3 = 2.0 * s2 * (z13 - z11);\n  var xl2 = -2.0 * s3 * z2;\n  var xl3 = -2.0 * s3 * (z3 - z1);\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\n  var xgh2 = 2.0 * s4 * z32;\n  var xgh3 = 2.0 * s4 * (z33 - z31);\n  var xgh4 = -18.0 * s4 * zel;\n  var xh2 = -2.0 * s2 * z22;\n  var xh3 = -2.0 * s2 * (z23 - z21);\n  return {\n    snodm: snodm,\n    cnodm: cnodm,\n    sinim: sinim,\n    cosim: cosim,\n    sinomm: sinomm,\n    cosomm: cosomm,\n    day: day,\n    e3: e3,\n    ee2: ee2,\n    em: em,\n    emsq: emsq,\n    gam: gam,\n    peo: peo,\n    pgho: pgho,\n    pho: pho,\n    pinco: pinco,\n    plo: plo,\n    rtemsq: rtemsq,\n    se2: se2,\n    se3: se3,\n    sgh2: sgh2,\n    sgh3: sgh3,\n    sgh4: sgh4,\n    sh2: sh2,\n    sh3: sh3,\n    si2: si2,\n    si3: si3,\n    sl2: sl2,\n    sl3: sl3,\n    sl4: sl4,\n    s1: s1,\n    s2: s2,\n    s3: s3,\n    s4: s4,\n    s5: s5,\n    s6: s6,\n    s7: s7,\n    ss1: ss1,\n    ss2: ss2,\n    ss3: ss3,\n    ss4: ss4,\n    ss5: ss5,\n    ss6: ss6,\n    ss7: ss7,\n    sz1: sz1,\n    sz2: sz2,\n    sz3: sz3,\n    sz11: sz11,\n    sz12: sz12,\n    sz13: sz13,\n    sz21: sz21,\n    sz22: sz22,\n    sz23: sz23,\n    sz31: sz31,\n    sz32: sz32,\n    sz33: sz33,\n    xgh2: xgh2,\n    xgh3: xgh3,\n    xgh4: xgh4,\n    xh2: xh2,\n    xh3: xh3,\n    xi2: xi2,\n    xi3: xi3,\n    xl2: xl2,\n    xl3: xl3,\n    xl4: xl4,\n    nm: nm,\n    z1: z1,\n    z2: z2,\n    z3: z3,\n    z11: z11,\n    z12: z12,\n    z13: z13,\n    z21: z21,\n    z22: z22,\n    z23: z23,\n    z31: z31,\n    z32: z32,\n    z33: z33,\n    zmol: zmol,\n    zmos: zmos\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dsinit\n *\n *  this procedure provides deep space contributions to mean motion dot due\n *    to geopotential resonance with half day and one day orbits.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    cosim, sinim-\n *    emsq        - eccentricity squared\n *    argpo       - argument of perigee\n *    s1, s2, s3, s4, s5      -\n *    ss1, ss2, ss3, ss4, ss5 -\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\n *    t           - time\n *    tc          -\n *    gsto        - greenwich sidereal time                   rad\n *    mo          - mean anomaly\n *    mdot        - mean anomaly dot (rate)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *    nodedot     - right ascension of ascending node dot (rate)\n *    xpidot      -\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\n *    eccm        - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    xn          - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right ascension of ascending node\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    atime       -\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\n *    dedt        -\n *    didt        -\n *    dmdt        -\n *    dndt        -\n *    dnodt       -\n *    domdt       -\n *    del1, del2, del3        -\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\n *    theta       -\n *    xfact       -\n *    xlamo       -\n *    xli         -\n *    xni\n *\n *  locals        :\n *    ainv2       -\n *    aonv        -\n *    cosisq      -\n *    eoc         -\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\n *    sini2       -\n *    temp        -\n *    temp1       -\n *    theta       -\n *    xno2        -\n *\n *  coupling      :\n *    getgravconst\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dsinit(options) {\n  var cosim = options.cosim,\n    argpo = options.argpo,\n    s1 = options.s1,\n    s2 = options.s2,\n    s3 = options.s3,\n    s4 = options.s4,\n    s5 = options.s5,\n    sinim = options.sinim,\n    ss1 = options.ss1,\n    ss2 = options.ss2,\n    ss3 = options.ss3,\n    ss4 = options.ss4,\n    ss5 = options.ss5,\n    sz1 = options.sz1,\n    sz3 = options.sz3,\n    sz11 = options.sz11,\n    sz13 = options.sz13,\n    sz21 = options.sz21,\n    sz23 = options.sz23,\n    sz31 = options.sz31,\n    sz33 = options.sz33,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    mo = options.mo,\n    mdot = options.mdot,\n    no = options.no,\n    nodeo = options.nodeo,\n    nodedot = options.nodedot,\n    xpidot = options.xpidot,\n    z1 = options.z1,\n    z3 = options.z3,\n    z11 = options.z11,\n    z13 = options.z13,\n    z21 = options.z21,\n    z23 = options.z23,\n    z31 = options.z31,\n    z33 = options.z33,\n    ecco = options.ecco,\n    eccsq = options.eccsq;\n  var emsq = options.emsq,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    mm = options.mm,\n    nm = options.nm,\n    nodem = options.nodem,\n    irez = options.irez,\n    atime = options.atime,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    xli = options.xli,\n    xni = options.xni;\n  var f220;\n  var f221;\n  var f311;\n  var f321;\n  var f322;\n  var f330;\n  var f441;\n  var f442;\n  var f522;\n  var f523;\n  var f542;\n  var f543;\n  var g200;\n  var g201;\n  var g211;\n  var g300;\n  var g310;\n  var g322;\n  var g410;\n  var g422;\n  var g520;\n  var g521;\n  var g532;\n  var g533;\n  var sini2;\n  var temp;\n  var temp1;\n  var xno2;\n  var ainv2;\n  var aonv;\n  var cosisq;\n  var eoc;\n  var q22 = 1.7891679e-6;\n  var q31 = 2.1460748e-6;\n  var q33 = 2.2123015e-7;\n  var root22 = 1.7891679e-6;\n  var root44 = 7.3636953e-9;\n  var root54 = 2.1765803e-9;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var root32 = 3.7393792e-7;\n  var root52 = 1.1428639e-7;\n  var znl = 1.5835218e-4;\n  var zns = 1.19459e-5;\n\n  // -------------------- deep space initialization ------------\n  irez = 0;\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\n    irez = 1;\n  }\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\n    irez = 2;\n  }\n\n  // ------------------------ do solar terms -------------------\n  var ses = ss1 * zns * ss5;\n  var sis = ss2 * zns * (sz11 + sz13);\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\n  var shs = -zns * ss2 * (sz21 + sz23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shs = 0.0;\n  }\n  if (sinim !== 0.0) {\n    shs /= sinim;\n  }\n  var sgs = sghs - cosim * shs;\n\n  // ------------------------- do lunar terms ------------------\n  dedt = ses + s1 * znl * s5;\n  didt = sis + s2 * znl * (z11 + z13);\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\n  var shll = -znl * s2 * (z21 + z23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shll = 0.0;\n  }\n  domdt = sgs + sghl;\n  dnodt = shs;\n  if (sinim !== 0.0) {\n    domdt -= cosim / sinim * shll;\n    dnodt += shll / sinim;\n  }\n\n  // ----------- calculate deep space resonance effects --------\n  var dndt = 0.0;\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm  = -inclm;\n  //   argpm  = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  // -------------- initialize the resonance terms -------------\n  if (irez !== 0) {\n    aonv = Math.pow(nm / xke, x2o3);\n\n    // ---------- geopotential resonance for 12 hour orbits ------\n    if (irez === 2) {\n      cosisq = cosim * cosim;\n      var emo = em;\n      em = ecco;\n      var emsqo = emsq;\n      emsq = eccsq;\n      eoc = em * emsq;\n      g201 = -0.306 - (em - 0.64) * 0.440;\n      if (em <= 0.65) {\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\n      } else {\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\n        if (em > 0.715) {\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\n        } else {\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\n        }\n      }\n      if (em < 0.7) {\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\n      } else {\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\n      }\n      sini2 = sinim * sinim;\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\n      f221 = 1.5 * sini2;\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\n      f441 = 35.0 * sini2 * f220;\n      f442 = 39.3750 * sini2 * sini2;\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\n      xno2 = nm * nm;\n      ainv2 = aonv * aonv;\n      temp1 = 3.0 * xno2 * ainv2;\n      temp = temp1 * root22;\n      d2201 = temp * f220 * g201;\n      d2211 = temp * f221 * g211;\n      temp1 *= aonv;\n      temp = temp1 * root32;\n      d3210 = temp * f321 * g310;\n      d3222 = temp * f322 * g322;\n      temp1 *= aonv;\n      temp = 2.0 * temp1 * root44;\n      d4410 = temp * f441 * g410;\n      d4422 = temp * f442 * g422;\n      temp1 *= aonv;\n      temp = temp1 * root52;\n      d5220 = temp * f522 * g520;\n      d5232 = temp * f523 * g532;\n      temp = 2.0 * temp1 * root54;\n      d5421 = temp * f542 * g521;\n      d5433 = temp * f543 * g533;\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\n      em = emo;\n      emsq = emsqo;\n    }\n\n    //  ---------------- synchronous resonance terms --------------\n    if (irez === 1) {\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\n      g310 = 1.0 + 2.0 * emsq;\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\n      f330 = 1.0 + cosim;\n      f330 *= 1.875 * f330 * f330;\n      del1 = 3.0 * nm * nm * aonv * aonv;\n      del2 = 2.0 * del1 * f220 * g200 * q22;\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\n      del1 = del1 * f311 * g310 * q31 * aonv;\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\n    }\n\n    //  ------------ for sgp4, initialize the integrator ----------\n    xli = xlamo;\n    xni = no;\n    atime = 0.0;\n    nm = no + dndt;\n  }\n  return {\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    mm: mm,\n    nm: nm,\n    nodem: nodem,\n    irez: irez,\n    atime: atime,\n    d2201: d2201,\n    d2211: d2211,\n    d3210: d3210,\n    d3222: d3222,\n    d4410: d4410,\n    d4422: d4422,\n    d5220: d5220,\n    d5232: d5232,\n    d5421: d5421,\n    d5433: d5433,\n    dedt: dedt,\n    didt: didt,\n    dmdt: dmdt,\n    dndt: dndt,\n    dnodt: dnodt,\n    domdt: domdt,\n    del1: del1,\n    del2: del2,\n    del3: del3,\n    xfact: xfact,\n    xlamo: xlamo,\n    xli: xli,\n    xni: xni\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function gstime\n *\n *  this function finds the greenwich sidereal time.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jdut1       - julian date in ut1             days from 4713 bc\n *\n *  outputs       :\n *    gstime      - greenwich sidereal time        0 to 2pi rad\n *\n *  locals        :\n *    temp        - temporary variable for doubles   rad\n *    tut1        - julian centuries from the\n *                  jan 1, 2000 12 h epoch (ut1)\n *\n *  coupling      :\n *    none\n *\n *  references    :\n *    vallado       2004, 191, eq 3-45\n * --------------------------------------------------------------------------- */\nfunction gstimeInternal(jdut1) {\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\n\n  //  ------------------------ check quadrants ---------------------\n  if (temp < 0.0) {\n    temp += twoPi;\n  }\n  return temp;\n}\nfunction gstime() {\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\n    return gstimeInternal(jday.apply(void 0, arguments));\n  }\n  return gstimeInternal.apply(void 0, arguments);\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure initl\n *\n *  this procedure initializes the sgp4 propagator. all the initialization is\n *    consolidated here instead of having multiple loops inside other routines.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    ecco        - eccentricity                           0.0 - 1.0\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    inclo       - inclination of satellite\n *    no          - mean motion of satellite\n *    satn        - satellite number\n *\n *  outputs       :\n *    ainv        - 1.0 / a\n *    ao          - semi major axis\n *    con41       -\n *    con42       - 1.0 - 5.0 cos(i)\n *    cosio       - cosine of inclination\n *    cosio2      - cosio squared\n *    eccsq       - eccentricity squared\n *    method      - flag for deep space                    'd', 'n'\n *    omeosq      - 1.0 - ecco * ecco\n *    posq        - semi-parameter squared\n *    rp          - radius of perigee\n *    rteosq      - square root of (1.0 - ecco*ecco)\n *    sinio       - sine of inclination\n *    gsto        - gst at time of observation               rad\n *    no          - mean motion of satellite\n *\n *  locals        :\n *    ak          -\n *    d1          -\n *    del         -\n *    adel        -\n *    po          -\n *\n *  coupling      :\n *    getgravconst\n *    gstime      - find greenwich sidereal time from the julian date\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction initl(options) {\n  var ecco = options.ecco,\n    epoch = options.epoch,\n    inclo = options.inclo,\n    opsmode = options.opsmode;\n  var no = options.no;\n\n  // sgp4fix use old way of finding gst\n  // ----------------------- earth constants ---------------------\n  // sgp4fix identify constants and allow alternate values\n\n  // ------------- calculate auxillary epoch quantities ----------\n  var eccsq = ecco * ecco;\n  var omeosq = 1.0 - eccsq;\n  var rteosq = Math.sqrt(omeosq);\n  var cosio = Math.cos(inclo);\n  var cosio2 = cosio * cosio;\n\n  // ------------------ un-kozai the mean motion -----------------\n  var ak = Math.pow(xke / no, x2o3);\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\n  var delPrime = d1 / (ak * ak);\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\n  delPrime = d1 / (adel * adel);\n  no /= 1.0 + delPrime;\n  var ao = Math.pow(xke / no, x2o3);\n  var sinio = Math.sin(inclo);\n  var po = ao * omeosq;\n  var con42 = 1.0 - 5.0 * cosio2;\n  var con41 = -con42 - cosio2 - cosio2;\n  var ainv = 1.0 / ao;\n  var posq = po * po;\n  var rp = ao * (1.0 - ecco);\n  var method = 'n';\n\n  //  sgp4fix modern approach to finding sidereal time\n  var gsto;\n  if (opsmode === 'a') {\n    //  sgp4fix use old way of finding gst\n    //  count integer number of days from 0 jan 1970\n    var ts70 = epoch - 7305.0;\n    var ds70 = Math.floor(ts70 + 1.0e-8);\n    var tfrac = ts70 - ds70;\n\n    //  find greenwich location at epoch\n    var c1 = 1.72027916940703639e-2; // eslint-disable-line no-loss-of-precision\n    var thgr70 = 1.7321343856509374; // eslint-disable-line no-loss-of-precision\n    var fk5r = 5.07551419432269442e-15; // eslint-disable-line no-loss-of-precision\n    var c1p2p = c1 + twoPi;\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\n    if (gsto < 0.0) {\n      gsto += twoPi;\n    }\n  } else {\n    gsto = gstime(epoch + 2433281.5);\n  }\n  return {\n    no: no,\n    method: method,\n    ainv: ainv,\n    ao: ao,\n    con41: con41,\n    con42: con42,\n    cosio: cosio,\n    cosio2: cosio2,\n    eccsq: eccsq,\n    omeosq: omeosq,\n    posq: posq,\n    rp: rp,\n    rteosq: rteosq,\n    sinio: sinio,\n    gsto: gsto\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dspace\n *\n *  this procedure provides deep space contributions to mean elements for\n *    perturbing third body.  these effects have been averaged over one\n *    revolution of the sun and moon.  for earth resonance effects, the\n *    effects have been averaged over no revolutions of the satellite.\n *    (mean motion)\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\n *    dedt        -\n *    del1, del2, del3  -\n *    didt        -\n *    dmdt        -\n *    dnodt       -\n *    domdt       -\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    argpo       - argument of perigee\n *    argpdot     - argument of perigee dot (rate)\n *    t           - time\n *    tc          -\n *    gsto        - gst\n *    xfact       -\n *    xlamo       -\n *    no          - mean motion\n *    atime       -\n *    em          - eccentricity\n *    ft          -\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    atime       -\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         -\n *    nodem       - right ascension of ascending node\n *    dndt        -\n *    nm          - mean motion\n *\n *  locals        :\n *    delt        -\n *    ft          -\n *    theta       -\n *    x2li        -\n *    x2omi       -\n *    xl          -\n *    xldot       -\n *    xnddt       -\n *    xndt        -\n *    xomi        -\n *\n *  coupling      :\n *    none        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dspace(options) {\n  var irez = options.irez,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    argpo = options.argpo,\n    argpdot = options.argpdot,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    no = options.no;\n  var atime = options.atime,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    xli = options.xli,\n    mm = options.mm,\n    xni = options.xni,\n    nodem = options.nodem,\n    nm = options.nm;\n  var fasx2 = 0.13130908;\n  var fasx4 = 2.8843198;\n  var fasx6 = 0.37448087;\n  var g22 = 5.7686396;\n  var g32 = 0.95240898;\n  var g44 = 1.8014998;\n  var g52 = 1.0508330;\n  var g54 = 4.4108898;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var stepp = 720.0;\n  var stepn = -720.0;\n  var step2 = 259200.0;\n  var delt;\n  var x2li;\n  var x2omi;\n  var xl;\n  var xldot;\n  var xnddt;\n  var xndt;\n  var xomi;\n  var dndt = 0.0;\n  var ft = 0.0;\n\n  //  ----------- calculate deep space resonance effects -----------\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm = -inclm;\n  //   argpm = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  /* - update resonances : numerical (euler-maclaurin) integration - */\n  /* ------------------------- epoch restart ----------------------  */\n  //   sgp4fix for propagator problems\n  //   the following integration works for negative time steps and periods\n  //   the specific changes are unknown because the original code was so convoluted\n\n  // sgp4fix take out atime = 0.0 and fix for faster operation\n\n  if (irez !== 0) {\n    //  sgp4fix streamline check\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\n      atime = 0.0;\n      xni = no;\n      xli = xlamo;\n    }\n\n    // sgp4fix move check outside loop\n    if (t > 0.0) {\n      delt = stepp;\n    } else {\n      delt = stepn;\n    }\n    var iretn = 381; // added for do loop\n    while (iretn === 381) {\n      //  ------------------- dot terms calculated -------------\n      //  ----------- near - synchronous resonance terms -------\n      if (irez !== 2) {\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\n        xldot = xni + xfact;\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\n        xnddt *= xldot;\n      } else {\n        // --------- near - half-day resonance terms --------\n        xomi = argpo + argpdot * atime;\n        x2omi = xomi + xomi;\n        x2li = xli + xli;\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\n        xldot = xni + xfact;\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * (d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54));\n        xnddt *= xldot;\n      }\n\n      //  ----------------------- integrator -------------------\n      //  sgp4fix move end checks to end of routine\n      if (Math.abs(t - atime) >= stepp) {\n        iretn = 381;\n      } else {\n        ft = t - atime;\n        iretn = 0;\n      }\n      if (iretn === 381) {\n        xli += xldot * delt + xndt * step2;\n        xni += xndt * delt + xnddt * step2;\n        atime += delt;\n      }\n    }\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\n    if (irez !== 1) {\n      mm = xl - 2.0 * nodem + 2.0 * theta;\n      dndt = nm - no;\n    } else {\n      mm = xl - nodem - argpm + theta;\n      dndt = nm - no;\n    }\n    nm = no + dndt;\n  }\n  return {\n    atime: atime,\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    xli: xli,\n    mm: mm,\n    xni: xni,\n    nodem: nodem,\n    dndt: dndt,\n    nm: nm\n  };\n}\n\n/*----------------------------------------------------------------------------\n *\n *                             procedure sgp4\n *\n *  this procedure is the sgp4 prediction model from space command. this is an\n *    updated and combined version of sgp4 and sdp4, which were originally\n *    published separately in spacetrack report //3. this version follows the\n *    methodology from the aiaa paper (2006) describing the history and\n *    development of the code.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    satrec  - initialised structure from sgp4init() call.\n *    tsince  - time since epoch (minutes)\n *\n *  outputs       :\n *    r           - position vector                     km\n *    v           - velocity                            km/sec\n *  return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    am          -\n *    axnl, aynl        -\n *    betal       -\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\n *    delm        -\n *    delomg      -\n *    dndt        -\n *    eccm        -\n *    emsq        -\n *    ecose       -\n *    el2         -\n *    eo1         -\n *    eccp        -\n *    esine       -\n *    argpm       -\n *    argpp       -\n *    omgadf      -\n *    pl          -\n *    r           -\n *    rtemsq      -\n *    rdotl       -\n *    rl          -\n *    rvdot       -\n *    rvdotl      -\n *    su          -\n *    t2  , t3   , t4    , tc\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right asc of ascending node\n *    xinc        -\n *    xincp       -\n *    xl          -\n *    xlm         -\n *    mp          -\n *    xmdf        -\n *    xmx         -\n *    xmy         -\n *    nodedf      -\n *    xnode       -\n *    nodep       -\n *    np          -\n *\n *  coupling      :\n *    getgravconst-\n *    dpper\n *    dspace\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report //3 1980\n *    hoots, norad spacetrack report //6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4(satrec, tsince) {\n  /* eslint-disable no-param-reassign */\n\n  var coseo1;\n  var sineo1;\n  var cosip;\n  var sinip;\n  var cosisq;\n  var delm;\n  var delomg;\n  var eo1;\n  var argpm;\n  var argpp;\n  var su;\n  var t3;\n  var t4;\n  var tc;\n  var tem5;\n  var temp;\n  var tempa;\n  var tempe;\n  var templ;\n  var inclm;\n  var mm;\n  var nm;\n  var nodem;\n  var xincp;\n  var xlm;\n  var mp;\n  var nodep;\n\n  /* ------------------ set mathematical constants --------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12;\n\n  // --------------------- clear sgp4 error flag -----------------\n  satrec.t = tsince;\n  satrec.error = 0;\n\n  //  ------- update for secular gravity and atmospheric drag -----\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\n  argpm = argpdf;\n  mm = xmdf;\n  var t2 = satrec.t * satrec.t;\n  nodem = nodedf + satrec.nodecf * t2;\n  tempa = 1.0 - satrec.cc1 * satrec.t;\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\n  templ = satrec.t2cof * t2;\n  if (satrec.isimp !== 1) {\n    delomg = satrec.omgcof * satrec.t;\n    //  sgp4fix use mutliply for speed instead of pow\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\n    temp = delomg + delm;\n    mm = xmdf + temp;\n    argpm = argpdf - temp;\n    t3 = t2 * satrec.t;\n    t4 = t3 * satrec.t;\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\n  }\n  nm = satrec.no;\n  var em = satrec.ecco;\n  inclm = satrec.inclo;\n  if (satrec.method === 'd') {\n    tc = satrec.t;\n    var dspaceOptions = {\n      irez: satrec.irez,\n      d2201: satrec.d2201,\n      d2211: satrec.d2211,\n      d3210: satrec.d3210,\n      d3222: satrec.d3222,\n      d4410: satrec.d4410,\n      d4422: satrec.d4422,\n      d5220: satrec.d5220,\n      d5232: satrec.d5232,\n      d5421: satrec.d5421,\n      d5433: satrec.d5433,\n      dedt: satrec.dedt,\n      del1: satrec.del1,\n      del2: satrec.del2,\n      del3: satrec.del3,\n      didt: satrec.didt,\n      dmdt: satrec.dmdt,\n      dnodt: satrec.dnodt,\n      domdt: satrec.domdt,\n      argpo: satrec.argpo,\n      argpdot: satrec.argpdot,\n      t: satrec.t,\n      tc: tc,\n      gsto: satrec.gsto,\n      xfact: satrec.xfact,\n      xlamo: satrec.xlamo,\n      no: satrec.no,\n      atime: satrec.atime,\n      em: em,\n      argpm: argpm,\n      inclm: inclm,\n      xli: satrec.xli,\n      mm: mm,\n      xni: satrec.xni,\n      nodem: nodem,\n      nm: nm\n    };\n    var dspaceResult = dspace(dspaceOptions);\n    em = dspaceResult.em;\n    argpm = dspaceResult.argpm;\n    inclm = dspaceResult.inclm;\n    mm = dspaceResult.mm;\n    nodem = dspaceResult.nodem;\n    nm = dspaceResult.nm;\n  }\n  if (nm <= 0.0) {\n    // printf(\"// error nm %f\\n\", nm);\n    satrec.error = 2;\n    // sgp4fix add return\n    return [false, false];\n  }\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\n  nm = xke / Math.pow(am, 1.5);\n  em -= tempe;\n\n  // fix tolerance for error recognition\n  // sgp4fix am is fixed from the previous nm check\n  if (em >= 1.0 || em < -0.001) {\n    // || (am < 0.95)\n    // printf(\"// error em %f\\n\", em);\n    satrec.error = 1;\n    // sgp4fix to return if there is an error in eccentricity\n    return [false, false];\n  }\n\n  //  sgp4fix fix tolerance to avoid a divide by zero\n  if (em < 1.0e-6) {\n    em = 1.0e-6;\n  }\n  mm += satrec.no * templ;\n  xlm = mm + argpm + nodem;\n  nodem %= twoPi;\n  argpm %= twoPi;\n  xlm %= twoPi;\n  mm = (xlm - argpm - nodem) % twoPi;\n\n  // ----------------- compute extra mean quantities -------------\n  var sinim = Math.sin(inclm);\n  var cosim = Math.cos(inclm);\n\n  // -------------------- add lunar-solar periodics --------------\n  var ep = em;\n  xincp = inclm;\n  argpp = argpm;\n  nodep = nodem;\n  mp = mm;\n  sinip = sinim;\n  cosip = cosim;\n  if (satrec.method === 'd') {\n    var dpperParameters = {\n      inclo: satrec.inclo,\n      init: 'n',\n      ep: ep,\n      inclp: xincp,\n      nodep: nodep,\n      argpp: argpp,\n      mp: mp,\n      opsmode: satrec.operationmode\n    };\n    var dpperResult = dpper(satrec, dpperParameters);\n    ep = dpperResult.ep;\n    nodep = dpperResult.nodep;\n    argpp = dpperResult.argpp;\n    mp = dpperResult.mp;\n    xincp = dpperResult.inclp;\n    if (xincp < 0.0) {\n      xincp = -xincp;\n      nodep += pi;\n      argpp -= pi;\n    }\n    if (ep < 0.0 || ep > 1.0) {\n      //  printf(\"// error ep %f\\n\", ep);\n      satrec.error = 3;\n      //  sgp4fix add return\n      return [false, false];\n    }\n  }\n\n  //  -------------------- long period periodics ------------------\n  if (satrec.method === 'd') {\n    sinip = Math.sin(xincp);\n    cosip = Math.cos(xincp);\n    satrec.aycof = -0.5 * j3oj2 * sinip;\n\n    //  sgp4fix for divide by zero for xincp = 180 deg\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\n    }\n  }\n  var axnl = ep * Math.cos(argpp);\n  temp = 1.0 / (am * (1.0 - ep * ep));\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl;\n\n  // --------------------- solve kepler's equation ---------------\n  var u = (xl - nodep) % twoPi;\n  eo1 = u;\n  tem5 = 9999.9;\n  var ktr = 1;\n\n  //    sgp4fix for kepler iteration\n  //    the following iteration needs better limits on corrections\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\n    sineo1 = Math.sin(eo1);\n    coseo1 = Math.cos(eo1);\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\n    if (Math.abs(tem5) >= 0.95) {\n      if (tem5 > 0.0) {\n        tem5 = 0.95;\n      } else {\n        tem5 = -0.95;\n      }\n    }\n    eo1 += tem5;\n    ktr += 1;\n  }\n\n  //  ------------- short period preliminary quantities -----------\n  var ecose = axnl * coseo1 + aynl * sineo1;\n  var esine = axnl * sineo1 - aynl * coseo1;\n  var el2 = axnl * axnl + aynl * aynl;\n  var pl = am * (1.0 - el2);\n  if (pl < 0.0) {\n    //  printf(\"// error pl %f\\n\", pl);\n    satrec.error = 4;\n    //  sgp4fix add return\n    return [false, false];\n  }\n  var rl = am * (1.0 - ecose);\n  var rdotl = Math.sqrt(am) * esine / rl;\n  var rvdotl = Math.sqrt(pl) / rl;\n  var betal = Math.sqrt(1.0 - el2);\n  temp = esine / (1.0 + betal);\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\n  su = Math.atan2(sinu, cosu);\n  var sin2u = (cosu + cosu) * sinu;\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\n  temp = 1.0 / pl;\n  var temp1 = 0.5 * j2 * temp;\n  var temp2 = temp1 * temp;\n\n  // -------------- update for short period periodics ------------\n  if (satrec.method === 'd') {\n    cosisq = cosip * cosip;\n    satrec.con41 = 3.0 * cosisq - 1.0;\n    satrec.x1mth2 = 1.0 - cosisq;\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\n  }\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u;\n\n  // sgp4fix for decaying satellites\n  if (mrt < 1.0) {\n    // printf(\"// decay condition %11.6f \\n\",mrt);\n    satrec.error = 6;\n    return {\n      position: false,\n      velocity: false\n    };\n  }\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke;\n\n  // --------------------- orientation vectors -------------------\n  var sinsu = Math.sin(su);\n  var cossu = Math.cos(su);\n  var snod = Math.sin(xnode);\n  var cnod = Math.cos(xnode);\n  var sini = Math.sin(xinc);\n  var cosi = Math.cos(xinc);\n  var xmx = -snod * cosi;\n  var xmy = cnod * cosi;\n  var ux = xmx * sinsu + cnod * cossu;\n  var uy = xmy * sinsu + snod * cossu;\n  var uz = sini * sinsu;\n  var vx = xmx * cossu - cnod * sinsu;\n  var vy = xmy * cossu - snod * sinsu;\n  var vz = sini * cossu;\n\n  // --------- position and velocity (in km and km/sec) ----------\n  var r = {\n    x: mrt * ux * earthRadius,\n    y: mrt * uy * earthRadius,\n    z: mrt * uz * earthRadius\n  };\n  var v = {\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\n    z: (mvt * uz + rvdot * vz) * vkmpersec\n  };\n  return {\n    position: r,\n    velocity: v\n  };\n\n  /* eslint-enable no-param-reassign */\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                             procedure sgp4init\n *\n *  this procedure initializes variables for sgp4.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    satn        - satellite number\n *    bstar       - sgp4 type drag coefficient              kg/m2er\n *    ecco        - eccentricity\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    argpo       - argument of perigee (output if ds)\n *    inclo       - inclination\n *    mo          - mean anomaly (output if ds)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *\n *  outputs       :\n *    rec      - common values for subsequent calls\n *    return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\n *    cc1sq  , cc2    , cc3\n *    coef   , coef1\n *    cosio4      -\n *    day         -\n *    dndt        -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    eeta        -\n *    etasq       -\n *    gam         -\n *    argpm       - argument of perigee\n *    nodem       -\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    perige      - perigee\n *    pinvsq      -\n *    psisq       -\n *    qzms24      -\n *    rtemsq      -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    sfour       -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\n *    sz1, sz2, sz3\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    tc          -\n *    temp        -\n *    temp1, temp2, temp3       -\n *    tsi         -\n *    xpidot      -\n *    xhdot1      -\n *    z1, z2, z3          -\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *\n *  coupling      :\n *    getgravconst-\n *    initl       -\n *    dscom       -\n *    dpper       -\n *    dsinit      -\n *    sgp4        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4init(satrec, options) {\n  /* eslint-disable no-param-reassign */\n\n  var opsmode = options.opsmode,\n    satn = options.satn,\n    epoch = options.epoch,\n    xbstar = options.xbstar,\n    xecco = options.xecco,\n    xargpo = options.xargpo,\n    xinclo = options.xinclo,\n    xmo = options.xmo,\n    xno = options.xno,\n    xnodeo = options.xnodeo;\n  var cosim;\n  var sinim;\n  var cc1sq;\n  var cc2;\n  var cc3;\n  var coef;\n  var coef1;\n  var cosio4;\n  var em;\n  var emsq;\n  var eeta;\n  var etasq;\n  var argpm;\n  var nodem;\n  var inclm;\n  var mm;\n  var nm;\n  var perige;\n  var pinvsq;\n  var psisq;\n  var qzms24;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var sfour;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var sz1;\n  var sz3;\n  var sz11;\n  var sz13;\n  var sz21;\n  var sz23;\n  var sz31;\n  var sz33;\n  var tc;\n  var temp;\n  var temp1;\n  var temp2;\n  var temp3;\n  var tsi;\n  var xpidot;\n  var xhdot1;\n  var z1;\n  var z3;\n  var z11;\n  var z13;\n  var z21;\n  var z23;\n  var z31;\n  var z33;\n\n  /* ------------------------ initialization --------------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n  var temp4 = 1.5e-12;\n\n  // ----------- set all near earth variables to zero ------------\n  satrec.isimp = 0;\n  satrec.method = 'n';\n  satrec.aycof = 0.0;\n  satrec.con41 = 0.0;\n  satrec.cc1 = 0.0;\n  satrec.cc4 = 0.0;\n  satrec.cc5 = 0.0;\n  satrec.d2 = 0.0;\n  satrec.d3 = 0.0;\n  satrec.d4 = 0.0;\n  satrec.delmo = 0.0;\n  satrec.eta = 0.0;\n  satrec.argpdot = 0.0;\n  satrec.omgcof = 0.0;\n  satrec.sinmao = 0.0;\n  satrec.t = 0.0;\n  satrec.t2cof = 0.0;\n  satrec.t3cof = 0.0;\n  satrec.t4cof = 0.0;\n  satrec.t5cof = 0.0;\n  satrec.x1mth2 = 0.0;\n  satrec.x7thm1 = 0.0;\n  satrec.mdot = 0.0;\n  satrec.nodedot = 0.0;\n  satrec.xlcof = 0.0;\n  satrec.xmcof = 0.0;\n  satrec.nodecf = 0.0;\n\n  // ----------- set all deep space variables to zero ------------\n  satrec.irez = 0;\n  satrec.d2201 = 0.0;\n  satrec.d2211 = 0.0;\n  satrec.d3210 = 0.0;\n  satrec.d3222 = 0.0;\n  satrec.d4410 = 0.0;\n  satrec.d4422 = 0.0;\n  satrec.d5220 = 0.0;\n  satrec.d5232 = 0.0;\n  satrec.d5421 = 0.0;\n  satrec.d5433 = 0.0;\n  satrec.dedt = 0.0;\n  satrec.del1 = 0.0;\n  satrec.del2 = 0.0;\n  satrec.del3 = 0.0;\n  satrec.didt = 0.0;\n  satrec.dmdt = 0.0;\n  satrec.dnodt = 0.0;\n  satrec.domdt = 0.0;\n  satrec.e3 = 0.0;\n  satrec.ee2 = 0.0;\n  satrec.peo = 0.0;\n  satrec.pgho = 0.0;\n  satrec.pho = 0.0;\n  satrec.pinco = 0.0;\n  satrec.plo = 0.0;\n  satrec.se2 = 0.0;\n  satrec.se3 = 0.0;\n  satrec.sgh2 = 0.0;\n  satrec.sgh3 = 0.0;\n  satrec.sgh4 = 0.0;\n  satrec.sh2 = 0.0;\n  satrec.sh3 = 0.0;\n  satrec.si2 = 0.0;\n  satrec.si3 = 0.0;\n  satrec.sl2 = 0.0;\n  satrec.sl3 = 0.0;\n  satrec.sl4 = 0.0;\n  satrec.gsto = 0.0;\n  satrec.xfact = 0.0;\n  satrec.xgh2 = 0.0;\n  satrec.xgh3 = 0.0;\n  satrec.xgh4 = 0.0;\n  satrec.xh2 = 0.0;\n  satrec.xh3 = 0.0;\n  satrec.xi2 = 0.0;\n  satrec.xi3 = 0.0;\n  satrec.xl2 = 0.0;\n  satrec.xl3 = 0.0;\n  satrec.xl4 = 0.0;\n  satrec.xlamo = 0.0;\n  satrec.zmol = 0.0;\n  satrec.zmos = 0.0;\n  satrec.atime = 0.0;\n  satrec.xli = 0.0;\n  satrec.xni = 0.0;\n\n  // sgp4fix - note the following variables are also passed directly via satrec.\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\n  // variables, but the user would need to set the satrec.* values first. we\n  // include the additional assignments in case twoline2rv is not used.\n\n  satrec.bstar = xbstar;\n  satrec.ecco = xecco;\n  satrec.argpo = xargpo;\n  satrec.inclo = xinclo;\n  satrec.mo = xmo;\n  satrec.no = xno;\n  satrec.nodeo = xnodeo;\n\n  //  sgp4fix add opsmode\n  satrec.operationmode = opsmode;\n\n  // ------------------------ earth constants -----------------------\n  // sgp4fix identify constants and allow alternate values\n\n  var ss = 78.0 / earthRadius + 1.0;\n  // sgp4fix use multiply for speed instead of pow\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\n  satrec.init = 'y';\n  satrec.t = 0.0;\n  var initlOptions = {\n    satn: satn,\n    ecco: satrec.ecco,\n    epoch: epoch,\n    inclo: satrec.inclo,\n    no: satrec.no,\n    method: satrec.method,\n    opsmode: satrec.operationmode\n  };\n  var initlResult = initl(initlOptions);\n  var ao = initlResult.ao,\n    con42 = initlResult.con42,\n    cosio = initlResult.cosio,\n    cosio2 = initlResult.cosio2,\n    eccsq = initlResult.eccsq,\n    omeosq = initlResult.omeosq,\n    posq = initlResult.posq,\n    rp = initlResult.rp,\n    rteosq = initlResult.rteosq,\n    sinio = initlResult.sinio;\n  satrec.no = initlResult.no;\n  satrec.con41 = initlResult.con41;\n  satrec.gsto = initlResult.gsto;\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0;\n  satrec.error = 0;\n\n  // sgp4fix remove this check as it is unnecessary\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\n  // condition is below the surface of te earth\n  // if (rp < 1.0)\n  // {\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\n  //   satrec.error = 5;\n  // }\n\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\n    satrec.isimp = 0;\n    if (rp < 220.0 / earthRadius + 1.0) {\n      satrec.isimp = 1;\n    }\n    sfour = ss;\n    qzms24 = qzms2t;\n    perige = (rp - 1.0) * earthRadius;\n\n    // - for perigees below 156 km, s and qoms2t are altered -\n    if (perige < 156.0) {\n      sfour = perige - 78.0;\n      if (perige < 98.0) {\n        sfour = 20.0;\n      }\n\n      // sgp4fix use multiply for speed instead of pow\n      var qzms24temp = (120.0 - sfour) / earthRadius;\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\n      sfour = sfour / earthRadius + 1.0;\n    }\n    pinvsq = 1.0 / posq;\n    tsi = 1.0 / (ao - sfour);\n    satrec.eta = ao * satrec.ecco * tsi;\n    etasq = satrec.eta * satrec.eta;\n    eeta = satrec.ecco * satrec.eta;\n    psisq = Math.abs(1.0 - etasq);\n    coef = qzms24 * Math.pow(tsi, 4.0);\n    coef1 = coef / Math.pow(psisq, 3.5);\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\n    satrec.cc1 = satrec.bstar * cc2;\n    cc3 = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\n    }\n    satrec.x1mth2 = 1.0 - cosio2;\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\n    cosio4 = cosio2 * cosio2;\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\n    xhdot1 = -temp1 * cosio;\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\n    xpidot = satrec.argpdot + satrec.nodedot;\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\n    satrec.xmcof = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\n    }\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\n    satrec.t2cof = 1.5 * satrec.cc1;\n\n    // sgp4fix for divide by zero with xinco = 180 deg\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\n    }\n    satrec.aycof = -0.5 * j3oj2 * sinio;\n\n    // sgp4fix use multiply for speed instead of pow\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\n    satrec.sinmao = Math.sin(satrec.mo);\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0;\n\n    // --------------- deep space initialization -------------\n    if (2 * pi / satrec.no >= 225.0) {\n      satrec.method = 'd';\n      satrec.isimp = 1;\n      tc = 0.0;\n      inclm = satrec.inclo;\n      var dscomOptions = {\n        epoch: epoch,\n        ep: satrec.ecco,\n        argpp: satrec.argpo,\n        tc: tc,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        np: satrec.no,\n        e3: satrec.e3,\n        ee2: satrec.ee2,\n        peo: satrec.peo,\n        pgho: satrec.pgho,\n        pho: satrec.pho,\n        pinco: satrec.pinco,\n        plo: satrec.plo,\n        se2: satrec.se2,\n        se3: satrec.se3,\n        sgh2: satrec.sgh2,\n        sgh3: satrec.sgh3,\n        sgh4: satrec.sgh4,\n        sh2: satrec.sh2,\n        sh3: satrec.sh3,\n        si2: satrec.si2,\n        si3: satrec.si3,\n        sl2: satrec.sl2,\n        sl3: satrec.sl3,\n        sl4: satrec.sl4,\n        xgh2: satrec.xgh2,\n        xgh3: satrec.xgh3,\n        xgh4: satrec.xgh4,\n        xh2: satrec.xh2,\n        xh3: satrec.xh3,\n        xi2: satrec.xi2,\n        xi3: satrec.xi3,\n        xl2: satrec.xl2,\n        xl3: satrec.xl3,\n        xl4: satrec.xl4,\n        zmol: satrec.zmol,\n        zmos: satrec.zmos\n      };\n      var dscomResult = dscom(dscomOptions);\n      satrec.e3 = dscomResult.e3;\n      satrec.ee2 = dscomResult.ee2;\n      satrec.peo = dscomResult.peo;\n      satrec.pgho = dscomResult.pgho;\n      satrec.pho = dscomResult.pho;\n      satrec.pinco = dscomResult.pinco;\n      satrec.plo = dscomResult.plo;\n      satrec.se2 = dscomResult.se2;\n      satrec.se3 = dscomResult.se3;\n      satrec.sgh2 = dscomResult.sgh2;\n      satrec.sgh3 = dscomResult.sgh3;\n      satrec.sgh4 = dscomResult.sgh4;\n      satrec.sh2 = dscomResult.sh2;\n      satrec.sh3 = dscomResult.sh3;\n      satrec.si2 = dscomResult.si2;\n      satrec.si3 = dscomResult.si3;\n      satrec.sl2 = dscomResult.sl2;\n      satrec.sl3 = dscomResult.sl3;\n      satrec.sl4 = dscomResult.sl4;\n      sinim = dscomResult.sinim;\n      cosim = dscomResult.cosim;\n      em = dscomResult.em;\n      emsq = dscomResult.emsq;\n      s1 = dscomResult.s1;\n      s2 = dscomResult.s2;\n      s3 = dscomResult.s3;\n      s4 = dscomResult.s4;\n      s5 = dscomResult.s5;\n      ss1 = dscomResult.ss1;\n      ss2 = dscomResult.ss2;\n      ss3 = dscomResult.ss3;\n      ss4 = dscomResult.ss4;\n      ss5 = dscomResult.ss5;\n      sz1 = dscomResult.sz1;\n      sz3 = dscomResult.sz3;\n      sz11 = dscomResult.sz11;\n      sz13 = dscomResult.sz13;\n      sz21 = dscomResult.sz21;\n      sz23 = dscomResult.sz23;\n      sz31 = dscomResult.sz31;\n      sz33 = dscomResult.sz33;\n      satrec.xgh2 = dscomResult.xgh2;\n      satrec.xgh3 = dscomResult.xgh3;\n      satrec.xgh4 = dscomResult.xgh4;\n      satrec.xh2 = dscomResult.xh2;\n      satrec.xh3 = dscomResult.xh3;\n      satrec.xi2 = dscomResult.xi2;\n      satrec.xi3 = dscomResult.xi3;\n      satrec.xl2 = dscomResult.xl2;\n      satrec.xl3 = dscomResult.xl3;\n      satrec.xl4 = dscomResult.xl4;\n      satrec.zmol = dscomResult.zmol;\n      satrec.zmos = dscomResult.zmos;\n      nm = dscomResult.nm;\n      z1 = dscomResult.z1;\n      z3 = dscomResult.z3;\n      z11 = dscomResult.z11;\n      z13 = dscomResult.z13;\n      z21 = dscomResult.z21;\n      z23 = dscomResult.z23;\n      z31 = dscomResult.z31;\n      z33 = dscomResult.z33;\n      var dpperOptions = {\n        inclo: inclm,\n        init: satrec.init,\n        ep: satrec.ecco,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        argpp: satrec.argpo,\n        mp: satrec.mo,\n        opsmode: satrec.operationmode\n      };\n      var dpperResult = dpper(satrec, dpperOptions);\n      satrec.ecco = dpperResult.ep;\n      satrec.inclo = dpperResult.inclp;\n      satrec.nodeo = dpperResult.nodep;\n      satrec.argpo = dpperResult.argpp;\n      satrec.mo = dpperResult.mp;\n      argpm = 0.0;\n      nodem = 0.0;\n      mm = 0.0;\n      var dsinitOptions = {\n        cosim: cosim,\n        emsq: emsq,\n        argpo: satrec.argpo,\n        s1: s1,\n        s2: s2,\n        s3: s3,\n        s4: s4,\n        s5: s5,\n        sinim: sinim,\n        ss1: ss1,\n        ss2: ss2,\n        ss3: ss3,\n        ss4: ss4,\n        ss5: ss5,\n        sz1: sz1,\n        sz3: sz3,\n        sz11: sz11,\n        sz13: sz13,\n        sz21: sz21,\n        sz23: sz23,\n        sz31: sz31,\n        sz33: sz33,\n        t: satrec.t,\n        tc: tc,\n        gsto: satrec.gsto,\n        mo: satrec.mo,\n        mdot: satrec.mdot,\n        no: satrec.no,\n        nodeo: satrec.nodeo,\n        nodedot: satrec.nodedot,\n        xpidot: xpidot,\n        z1: z1,\n        z3: z3,\n        z11: z11,\n        z13: z13,\n        z21: z21,\n        z23: z23,\n        z31: z31,\n        z33: z33,\n        ecco: satrec.ecco,\n        eccsq: eccsq,\n        em: em,\n        argpm: argpm,\n        inclm: inclm,\n        mm: mm,\n        nm: nm,\n        nodem: nodem,\n        irez: satrec.irez,\n        atime: satrec.atime,\n        d2201: satrec.d2201,\n        d2211: satrec.d2211,\n        d3210: satrec.d3210,\n        d3222: satrec.d3222,\n        d4410: satrec.d4410,\n        d4422: satrec.d4422,\n        d5220: satrec.d5220,\n        d5232: satrec.d5232,\n        d5421: satrec.d5421,\n        d5433: satrec.d5433,\n        dedt: satrec.dedt,\n        didt: satrec.didt,\n        dmdt: satrec.dmdt,\n        dnodt: satrec.dnodt,\n        domdt: satrec.domdt,\n        del1: satrec.del1,\n        del2: satrec.del2,\n        del3: satrec.del3,\n        xfact: satrec.xfact,\n        xlamo: satrec.xlamo,\n        xli: satrec.xli,\n        xni: satrec.xni\n      };\n      var dsinitResult = dsinit(dsinitOptions);\n      satrec.irez = dsinitResult.irez;\n      satrec.atime = dsinitResult.atime;\n      satrec.d2201 = dsinitResult.d2201;\n      satrec.d2211 = dsinitResult.d2211;\n      satrec.d3210 = dsinitResult.d3210;\n      satrec.d3222 = dsinitResult.d3222;\n      satrec.d4410 = dsinitResult.d4410;\n      satrec.d4422 = dsinitResult.d4422;\n      satrec.d5220 = dsinitResult.d5220;\n      satrec.d5232 = dsinitResult.d5232;\n      satrec.d5421 = dsinitResult.d5421;\n      satrec.d5433 = dsinitResult.d5433;\n      satrec.dedt = dsinitResult.dedt;\n      satrec.didt = dsinitResult.didt;\n      satrec.dmdt = dsinitResult.dmdt;\n      satrec.dnodt = dsinitResult.dnodt;\n      satrec.domdt = dsinitResult.domdt;\n      satrec.del1 = dsinitResult.del1;\n      satrec.del2 = dsinitResult.del2;\n      satrec.del3 = dsinitResult.del3;\n      satrec.xfact = dsinitResult.xfact;\n      satrec.xlamo = dsinitResult.xlamo;\n      satrec.xli = dsinitResult.xli;\n      satrec.xni = dsinitResult.xni;\n    }\n\n    // ----------- set variables if not deep space -----------\n    if (satrec.isimp !== 1) {\n      cc1sq = satrec.cc1 * satrec.cc1;\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\n      satrec.d3 = (17.0 * ao + sfour) * temp;\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\n    }\n\n    /* finally propogate to zero epoch to initialize all others. */\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\n    // if(satrec.error == 0)\n  }\n  sgp4(satrec, 0);\n  satrec.init = 'n';\n\n  /* eslint-enable no-param-reassign */\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function twoline2rv\n *\n *  this function converts the two line element set character string data to\n *    variables and initializes the sgp4 variables. several intermediate varaibles\n *    and quantities are determined. note that the result is a structure so multiple\n *    satellites can be processed simultaneously without having to reinitialize. the\n *    verification mode is an important option that permits quick checks of any\n *    changes to the underlying technical theory. this option works using a\n *    modified tle file in which the start, stop, and delta time values are\n *    included at the end of the second line of data. this only works with the\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\n *    from epoch and is useful when performing entire catalog runs.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs        :\n *    longstr1    - first line of the tle\n *    longstr2    - second line of the tle\n *    typerun     - type of run                    verification 'v', catalog 'c',\n *                                                 manual 'm'\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    whichconst  - which set of constants to use  72, 84\n *\n *  outputs       :\n *    satrec      - structure containing all the sgp4 satellite information\n *\n *  coupling      :\n *    getgravconst-\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\n *    jday        - convert day month year hour minute second into julian date\n *    sgp4init    - initialize the sgp4 variables\n *\n *  references    :\n *    norad spacetrack report #3\n *    vallado, crawford, hujsak, kelso  2006\n --------------------------------------------------------------------------- */\n\n/**\n * Return a Satellite imported from two lines of TLE data.\n *\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\n * and select which standard set of gravitational constants you want\n * by providing `gravity_constants`:\n *\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\n *\n * Normally, computations are made using letious recent improvements\n * to the algorithm.  If you want to turn some of these off and go\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\n */\nfunction twoline2satrec(longstr1, longstr2) {\n  var opsmode = 'i';\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\n  var year = 0;\n  var satrec = {};\n  satrec.error = 0;\n  satrec.satnum = longstr1.substring(2, 7);\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61)));\n\n  // satrec.satnum = longstr2.substring(2, 7);\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\n  satrec.no = parseFloat(longstr2.substring(52, 63));\n\n  // ---- find no, ndot, nddot ----\n  satrec.no /= xpdotp; //   rad/min\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\n\n  // ---- convert to sgp4 units ----\n  // satrec.ndot /= (xpdotp * 1440.0); // ? * minperday\n  // satrec.nddot /= (xpdotp * 1440.0 * 1440);\n\n  // ---- find standard orbital elements ----\n  satrec.inclo *= deg2rad;\n  satrec.nodeo *= deg2rad;\n  satrec.argpo *= deg2rad;\n  satrec.mo *= deg2rad;\n\n  // ----------------------------------------------------------------\n  // find sgp4epoch time of element set\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\n  // and minutes from the epoch (time)\n  // ----------------------------------------------------------------\n\n  // ---------------- temp fix for years from 1957-2056 -------------------\n  // --------- correct fix will occur when year is 4-digit in tle ---------\n\n  if (satrec.epochyr < 57) {\n    year = satrec.epochyr + 2000;\n  } else {\n    year = satrec.epochyr + 1900;\n  }\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\n  var mon = mdhmsResult.mon,\n    day = mdhmsResult.day,\n    hr = mdhmsResult.hr,\n    minute = mdhmsResult.minute,\n    sec = mdhmsResult.sec;\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec);\n\n  //  ---------------- initialize the orbit at sgp4epoch -------------------\n  sgp4init(satrec, {\n    opsmode: opsmode,\n    satn: satrec.satnum,\n    epoch: satrec.jdsatepoch - 2433281.5,\n    xbstar: satrec.bstar,\n    xecco: satrec.ecco,\n    xargpo: satrec.argpo,\n    xinclo: satrec.inclo,\n    xmo: satrec.mo,\n    xno: satrec.no,\n    xnodeo: satrec.nodeo\n  });\n  return satrec;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction propagate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  // Return a position and velocity vector for a given date and time.\n  var satrec = args[0];\n  var date = Array.prototype.slice.call(args, 1);\n  var j = jday.apply(void 0, _toConsumableArray(date));\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\n  return sgp4(satrec, m);\n}\nfunction dopplerFactor(location, position, velocity) {\n  var mfactor = 7.292115E-5;\n  var c = 299792.458; // Speed of light in km/s\n\n  var range = {\n    x: position.x - location.x,\n    y: position.y - location.y,\n    z: position.z - location.z\n  };\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\n  var rangeVel = {\n    x: velocity.x + mfactor * location.y,\n    y: velocity.y - mfactor * location.x,\n    z: velocity.z\n  };\n  function sign(value) {\n    return value >= 0 ? 1 : -1;\n  }\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\n  return 1 + rangeRate / c * sign(rangeRate);\n}\nfunction radiansToDegrees(radians) {\n  return radians * rad2deg;\n}\nfunction degreesToRadians(degrees) {\n  return degrees * deg2rad;\n}\nfunction degreesLat(radians) {\n  if (radians < -pi / 2 || radians > pi / 2) {\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction degreesLong(radians) {\n  if (radians < -pi || radians > pi) {\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction radiansLat(degrees) {\n  if (degrees < -90 || degrees > 90) {\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction radiansLong(degrees) {\n  if (degrees < -180 || degrees > 180) {\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction geodeticToEcf(geodetic) {\n  var longitude = geodetic.longitude,\n    latitude = geodetic.latitude,\n    height = geodetic.height;\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction eciToGeodetic(eci, gmst) {\n  // http://www.celestrak.com/columns/v02n03/\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\n  while (longitude < -pi) {\n    longitude += twoPi;\n  }\n  while (longitude > pi) {\n    longitude -= twoPi;\n  }\n  var kmax = 20;\n  var k = 0;\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\n  var C;\n  while (k < kmax) {\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\n    k += 1;\n  }\n  var height = R / Math.cos(latitude) - a * C;\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    height: height\n  };\n}\nfunction ecfToEci(ecf, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\n  var Z = ecf.z;\n  return {\n    x: X,\n    y: Y,\n    z: Z\n  };\n}\nfunction eciToEcf(eci, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  //\n  // Inverse:\n  // [X]     [C  S  0][X]\n  // [Y]  =  [-S C  0][Y]\n  // [Z]ecf  [0  0  1][Z]eci\n\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\n  var z = eci.z;\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction topocentric(observerGeodetic, satelliteEcf) {\n  // http://www.celestrak.com/columns/v02n02/\n  // TS Kelso's method, except I'm using ECF frame\n  // and he uses ECI.\n\n  var longitude = observerGeodetic.longitude,\n    latitude = observerGeodetic.latitude;\n  var observerEcf = geodeticToEcf(observerGeodetic);\n  var rx = satelliteEcf.x - observerEcf.x;\n  var ry = satelliteEcf.y - observerEcf.y;\n  var rz = satelliteEcf.z - observerEcf.z;\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\n  return {\n    topS: topS,\n    topE: topE,\n    topZ: topZ\n  };\n}\n\n/**\n * @param {Object} tc\n * @param {Number} tc.topS Positive horizontal vector S due south.\n * @param {Number} tc.topE Positive horizontal vector E due east.\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\n * @returns {Object}\n */\nfunction topocentricToLookAngles(tc) {\n  var topS = tc.topS,\n    topE = tc.topE,\n    topZ = tc.topZ;\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\n  var El = Math.asin(topZ / rangeSat);\n  var Az = Math.atan2(-topE, topS) + pi;\n  return {\n    azimuth: Az,\n    elevation: El,\n    rangeSat: rangeSat // Range in km\n  };\n}\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\n  return topocentricToLookAngles(topocentricCoords);\n}\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };","map":{"version":3,"names":["pi","Math","PI","twoPi","deg2rad","rad2deg","minutesPerDay","mu","earthRadius","xke","sqrt","vkmpersec","tumin","j2","j3","j4","j3oj2","x2o3","constants","Object","freeze","__proto__","days2mdhms","year","days","lmonth","dayofyr","floor","i","inttemp","mon","day","temp","hr","minute","sec","jdayInternal","msec","arguments","length","undefined","jday","Date","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","invjday","jd","asArray","tu","leapyrs","mdhms","UTC","dpper","satrec","options","e3","ee2","peo","pgho","pho","pinco","plo","se2","se3","sgh2","sgh3","sgh4","sh2","sh3","si2","si3","sl2","sl3","sl4","t","xgh2","xgh3","xgh4","xh2","xh3","xi2","xi3","xl2","xl3","xl4","zmol","zmos","init","opsmode","ep","inclp","nodep","argpp","mp","alfdp","betdp","cosip","sinip","cosop","sinop","dalf","dbet","dls","f2","f3","pe","pgh","ph","pinc","pl","sinzf","xls","xnoh","zf","zm","zns","zes","znl","zel","sin","cos","ses","sis","sls","sghs","shs","sel","sil","sll","sghl","shll","atan2","abs","dscom","epoch","tc","np","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","cc","x1","x2","x3","x4","x5","x6","x7","x8","zcosg","zsing","zcosh","zsinh","zcosi","zsini","ss1","ss2","ss3","ss4","ss5","ss6","ss7","sz1","sz2","sz3","sz11","sz12","sz13","sz21","sz22","sz23","sz31","sz32","sz33","s1","s2","s3","s4","s5","s6","s7","z1","z2","z3","z11","z12","z13","z21","z22","z23","z31","z32","z33","c1ss","c1l","zsinis","zcosis","zcosgs","zsings","nm","em","snodm","cnodm","sinomm","cosomm","sinim","cosim","emsq","betasq","rtemsq","xnodce","stem","ctem","zcosil","zsinil","zsinhl","zcoshl","gam","zx","zy","zcosgl","zsingl","xnoi","lsflg","dsinit","argpo","gsto","mo","mdot","no","nodeo","nodedot","xpidot","ecco","eccsq","argpm","inclm","mm","nodem","irez","atime","d2201","d2211","d3210","d3222","d4410","d4422","d5220","d5232","d5421","d5433","dedt","didt","dmdt","dnodt","domdt","del1","del2","del3","xfact","xlamo","xli","xni","f220","f221","f311","f321","f322","f330","f441","f442","f522","f523","f542","f543","g200","g201","g211","g300","g310","g322","g410","g422","g520","g521","g532","g533","sini2","temp1","xno2","ainv2","aonv","cosisq","eoc","q22","q31","q33","root22","root44","root54","rptim","root32","root52","sgs","dndt","theta","pow","emo","emsqo","gstimeInternal","jdut1","tut1","gstime","apply","initl","inclo","omeosq","rteosq","cosio","cosio2","ak","d1","delPrime","adel","ao","sinio","po","con42","con41","ainv","posq","rp","method","ts70","ds70","tfrac","c1","thgr70","fk5r","c1p2p","dspace","argpdot","fasx2","fasx4","fasx6","g22","g32","g44","g52","g54","stepp","stepn","step2","delt","x2li","x2omi","xl","xldot","xnddt","xndt","xomi","ft","iretn","sgp4","tsince","coseo1","sineo1","delm","delomg","eo1","su","t3","t4","tem5","tempa","tempe","templ","xincp","xlm","temp4","error","xmdf","argpdf","nodedf","t2","nodecf","cc1","bstar","cc4","t2cof","isimp","omgcof","delmtemp","eta","xmcof","delmo","d2","d3","d4","cc5","sinmao","t3cof","t4cof","t5cof","dspaceOptions","dspaceResult","am","dpperParameters","operationmode","dpperResult","aycof","xlcof","axnl","aynl","u","ktr","ecose","esine","el2","rl","rdotl","rvdotl","betal","sinu","cosu","sin2u","cos2u","temp2","x1mth2","x7thm1","mrt","position","velocity","xnode","xinc","mvt","rvdot","sinsu","cossu","snod","cnod","sini","cosi","xmx","xmy","ux","uy","uz","vx","vy","vz","r","x","y","z","v","sgp4init","satn","xbstar","xecco","xargpo","xinclo","xmo","xno","xnodeo","cc1sq","cc2","cc3","coef","coef1","cosio4","eeta","etasq","perige","pinvsq","psisq","qzms24","sfour","temp3","tsi","xhdot1","ss","qzms2ttemp","qzms2t","initlOptions","initlResult","a","alta","altp","qzms24temp","delmotemp","dscomOptions","dscomResult","dpperOptions","dsinitOptions","dsinitResult","twoline2satrec","longstr1","longstr2","xpdotp","satnum","substring","epochyr","parseInt","epochdays","parseFloat","ndot","nddot","concat","mdhmsResult","jdsatepoch","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","TypeError","propagate","_len","args","_key","j","m","dopplerFactor","location","mfactor","c","range","w","rangeVel","sign","value","rangeRate","radiansToDegrees","radians","degreesToRadians","degrees","degreesLat","RangeError","degreesLong","radiansLat","radiansLong","geodeticToEcf","geodetic","longitude","latitude","height","b","f","e2","normal","eciToGeodetic","eci","gmst","R","kmax","k","C","ecfToEci","ecf","X","Y","Z","eciToEcf","topocentric","observerGeodetic","satelliteEcf","observerEcf","rx","ry","rz","topS","topE","topZ","topocentricToLookAngles","rangeSat","El","asin","Az","azimuth","elevation","ecfToLookAngles","topocentricCoords"],"sources":["/home/jake/ptolemy/mmod/node_modules/satellite.js/dist/satellite.es.js"],"sourcesContent":["/*!\n * satellite-js v5.0.0\n * (c) 2013 Shashwat Kandadai and UCSC\n * https://github.com/shashwatak/satellite-js\n * License: MIT\n */\n\nvar pi = Math.PI;\nvar twoPi = pi * 2;\nvar deg2rad = pi / 180.0;\nvar rad2deg = 180 / pi;\nvar minutesPerDay = 1440.0;\nvar mu = 398600.8; // in km3 / s2\nvar earthRadius = 6378.135; // in km\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\nvar vkmpersec = earthRadius * xke / 60.0;\nvar tumin = 1.0 / xke;\nvar j2 = 0.001082616;\nvar j3 = -0.00000253881;\nvar j4 = -0.00000165597;\nvar j3oj2 = j3 / j2;\nvar x2o3 = 2.0 / 3.0;\n\nvar constants = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  deg2rad: deg2rad,\n  earthRadius: earthRadius,\n  j2: j2,\n  j3: j3,\n  j3oj2: j3oj2,\n  j4: j4,\n  minutesPerDay: minutesPerDay,\n  mu: mu,\n  pi: pi,\n  rad2deg: rad2deg,\n  tumin: tumin,\n  twoPi: twoPi,\n  vkmpersec: vkmpersec,\n  x2o3: x2o3,\n  xke: xke\n});\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure days2mdhms\n *\n *  this procedure converts the day of the year, days, to the equivalent month\n *    day, hour, minute and second.\n *\n *  algorithm     : set up array for the number of days per month\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  loop through a temp value while the value is < the days\n *                  perform int conversions to the correct day and month\n *                  convert remainder into h m s using type conversions\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    days        - julian day of the year         0.0  .. 366.0\n *\n *  outputs       :\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    dayofyr     - day of year\n *    temp        - temporary extended values\n *    inttemp     - temporary int value\n *    i           - index\n *    lmonth[12]  - int array containing the number of days per month\n *\n *  coupling      :\n *    none.\n * --------------------------------------------------------------------------- */\nfunction days2mdhms(year, days) {\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var dayofyr = Math.floor(days);\n\n  //  ----------------- find month and day of month ----------------\n  var i = 1;\n  var inttemp = 0;\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\n    inttemp += lmonth[i - 1];\n    i += 1;\n  }\n  var mon = i;\n  var day = dayofyr - inttemp;\n\n  //  ----------------- find hours minutes and seconds -------------\n  var temp = (days - dayofyr) * 24.0;\n  var hr = Math.floor(temp);\n  temp = (temp - hr) * 60.0;\n  var minute = Math.floor(temp);\n  var sec = (temp - minute) * 60.0;\n  return {\n    mon: mon,\n    day: day,\n    hr: hr,\n    minute: minute,\n    sec: sec\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure jday\n *\n *  this procedure finds the julian date given the year, month, day, and time.\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\n *\n *  algorithm     : calculate the answer in one step for efficiency\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - universal time hour            0 .. 23\n *    min         - universal time min             0 .. 59\n *    sec         - universal time sec             0.0 .. 59.999\n *\n *  outputs       :\n *    jd          - julian date                    days from 4713 bc\n *\n *  locals        :\n *    none.\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    vallado       2007, 189, alg 14, ex 3-14\n *\n * --------------------------------------------------------------------------- */\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n  ;\n}\n\nfunction jday(year, mon, day, hr, minute, sec, msec) {\n  if (year instanceof Date) {\n    var date = year;\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1,\n    // Note, this function requires months in range 1-12.\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  }\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure invjday\n *\n *  this procedure finds the year, month, day, hour, minute and second\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\n *\n *  algorithm     : set up starting values\n *                  find leap year - use 1900 because 2000 is a leap year\n *                  find the elapsed days through the year in a loop\n *                  call routine to find each individual value\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jd          - julian date                    days from 4713 bc\n *\n *  outputs       :\n *    year        - year                           1900 .. 2100\n *    mon         - month                          1 .. 12\n *    day         - day                            1 .. 28,29,30,31\n *    hr          - hour                           0 .. 23\n *    min         - minute                         0 .. 59\n *    sec         - second                         0.0 .. 59.999\n *\n *  locals        :\n *    days        - day of year plus fractional\n *                  portion of a day               days\n *    tu          - julian centuries from 0 h\n *                  jan 0, 1900\n *    temp        - temporary double values\n *    leapyrs     - number of leap years from 1900\n *\n *  coupling      :\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\n *\n *  references    :\n *    vallado       2007, 208, alg 22, ex 3-13\n * --------------------------------------------------------------------------- */\nfunction invjday(jd, asArray) {\n  // --------------- find year and days of the year -\n  var temp = jd - 2415019.5;\n  var tu = temp / 365.25;\n  var year = 1900 + Math.floor(tu);\n  var leapyrs = Math.floor((year - 1901) * 0.25);\n\n  // optional nudge by 8.64x10-7 sec to get even outputs\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001;\n\n  // ------------ check for case of beginning of a year -----------\n  if (days < 1.0) {\n    year -= 1;\n    leapyrs = Math.floor((year - 1901) * 0.25);\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\n  }\n\n  // ----------------- find remaing data  -------------------------\n  var mdhms = days2mdhms(year, days);\n  var mon = mdhms.mon,\n    day = mdhms.day,\n    hr = mdhms.hr,\n    minute = mdhms.minute;\n  var sec = mdhms.sec - 0.00000086400;\n  if (asArray) {\n    return [year, mon, day, hr, minute, Math.floor(sec)];\n  }\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           procedure dpper\n *\n *  this procedure provides deep space long period periodic contributions\n *    to the mean elements.  by design, these periodics are zero at epoch.\n *    this used to be dscom which included initialization, but it's really a\n *    recurring function.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    e3          -\n *    ee2         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\n *    t           -\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\n *    zmol        -\n *    zmos        -\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclo       - inclination - needed for lyddane modification\n *    nodep       - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  outputs       :\n *    ep          - eccentricity                           0.0 - 1.0\n *    inclp       - inclination\n *    nodep        - right ascension of ascending node\n *    argpp       - argument of perigee\n *    mp          - mean anomaly\n *\n *  locals        :\n *    alfdp       -\n *    betdp       -\n *    cosip  , sinip  , cosop  , sinop  ,\n *    dalf        -\n *    dbet        -\n *    dls         -\n *    f2, f3      -\n *    pe          -\n *    pgh         -\n *    ph          -\n *    pinc        -\n *    pl          -\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\n *    sll   , sls\n *    xls         -\n *    xnoh        -\n *    zf          -\n *    zm          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dpper(satrec, options) {\n  var e3 = satrec.e3,\n    ee2 = satrec.ee2,\n    peo = satrec.peo,\n    pgho = satrec.pgho,\n    pho = satrec.pho,\n    pinco = satrec.pinco,\n    plo = satrec.plo,\n    se2 = satrec.se2,\n    se3 = satrec.se3,\n    sgh2 = satrec.sgh2,\n    sgh3 = satrec.sgh3,\n    sgh4 = satrec.sgh4,\n    sh2 = satrec.sh2,\n    sh3 = satrec.sh3,\n    si2 = satrec.si2,\n    si3 = satrec.si3,\n    sl2 = satrec.sl2,\n    sl3 = satrec.sl3,\n    sl4 = satrec.sl4,\n    t = satrec.t,\n    xgh2 = satrec.xgh2,\n    xgh3 = satrec.xgh3,\n    xgh4 = satrec.xgh4,\n    xh2 = satrec.xh2,\n    xh3 = satrec.xh3,\n    xi2 = satrec.xi2,\n    xi3 = satrec.xi3,\n    xl2 = satrec.xl2,\n    xl3 = satrec.xl3,\n    xl4 = satrec.xl4,\n    zmol = satrec.zmol,\n    zmos = satrec.zmos;\n  var init = options.init,\n    opsmode = options.opsmode;\n  var ep = options.ep,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    argpp = options.argpp,\n    mp = options.mp;\n\n  // Copy satellite attributes into local variables for convenience\n  // and symmetry in writing formulae.\n\n  var alfdp;\n  var betdp;\n  var cosip;\n  var sinip;\n  var cosop;\n  var sinop;\n  var dalf;\n  var dbet;\n  var dls;\n  var f2;\n  var f3;\n  var pe;\n  var pgh;\n  var ph;\n  var pinc;\n  var pl;\n  var sinzf;\n  var xls;\n  var xnoh;\n  var zf;\n  var zm;\n\n  //  ---------------------- constants -----------------------------\n  var zns = 1.19459e-5;\n  var zes = 0.01675;\n  var znl = 1.5835218e-4;\n  var zel = 0.05490;\n\n  //  --------------- calculate time varying periodics -----------\n  zm = zmos + zns * t;\n\n  // be sure that the initial call has time set to zero\n  if (init === 'y') {\n    zm = zmos;\n  }\n  zf = zm + 2.0 * zes * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var ses = se2 * f2 + se3 * f3;\n  var sis = si2 * f2 + si3 * f3;\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\n  var shs = sh2 * f2 + sh3 * f3;\n  zm = zmol + znl * t;\n  if (init === 'y') {\n    zm = zmol;\n  }\n  zf = zm + 2.0 * zel * Math.sin(zm);\n  sinzf = Math.sin(zf);\n  f2 = 0.5 * sinzf * sinzf - 0.25;\n  f3 = -0.5 * sinzf * Math.cos(zf);\n  var sel = ee2 * f2 + e3 * f3;\n  var sil = xi2 * f2 + xi3 * f3;\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\n  var shll = xh2 * f2 + xh3 * f3;\n  pe = ses + sel;\n  pinc = sis + sil;\n  pl = sls + sll;\n  pgh = sghs + sghl;\n  ph = shs + shll;\n  if (init === 'n') {\n    pe -= peo;\n    pinc -= pinco;\n    pl -= plo;\n    pgh -= pgho;\n    ph -= pho;\n    inclp += pinc;\n    ep += pe;\n    sinip = Math.sin(inclp);\n    cosip = Math.cos(inclp);\n\n    /* ----------------- apply periodics directly ------------ */\n    // sgp4fix for lyddane choice\n    // strn3 used original inclination - this is technically feasible\n    // gsfc used perturbed inclination - also technically feasible\n    // probably best to readjust the 0.2 limit value and limit discontinuity\n    // 0.2 rad = 11.45916 deg\n    // use next line for original strn3 approach and original inclination\n    // if (inclo >= 0.2)\n    // use next line for gsfc version and perturbed inclination\n    if (inclp >= 0.2) {\n      ph /= sinip;\n      pgh -= cosip * ph;\n      argpp += pgh;\n      nodep += ph;\n      mp += pl;\n    } else {\n      //  ---- apply periodics with lyddane modification ----\n      sinop = Math.sin(nodep);\n      cosop = Math.cos(nodep);\n      alfdp = sinip * sinop;\n      betdp = sinip * cosop;\n      dalf = ph * cosop + pinc * cosip * sinop;\n      dbet = -ph * sinop + pinc * cosip * cosop;\n      alfdp += dalf;\n      betdp += dbet;\n      nodep %= twoPi;\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      xls = mp + argpp + cosip * nodep;\n      dls = pl + pgh - pinc * nodep * sinip;\n      xls += dls;\n      xnoh = nodep;\n      nodep = Math.atan2(alfdp, betdp);\n\n      //  sgp4fix for afspc written intrinsic functions\n      //  nodep used without a trigonometric function ahead\n      if (nodep < 0.0 && opsmode === 'a') {\n        nodep += twoPi;\n      }\n      if (Math.abs(xnoh - nodep) > pi) {\n        if (nodep < xnoh) {\n          nodep += twoPi;\n        } else {\n          nodep -= twoPi;\n        }\n      }\n      mp += pl;\n      argpp = xls - mp - cosip * nodep;\n    }\n  }\n  return {\n    ep: ep,\n    inclp: inclp,\n    nodep: nodep,\n    argpp: argpp,\n    mp: mp\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dscom\n *\n *  this procedure provides deep space common items used by both the secular\n *    and periodics subroutines.  input is provided as shown. this routine\n *    used to be called dpper, but the functions inside weren't well organized.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    epoch       -\n *    ep          - eccentricity\n *    argpp       - argument of perigee\n *    tc          -\n *    inclp       - inclination\n *    nodep       - right ascension of ascending node\n *    np          - mean motion\n *\n *  outputs       :\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\n *    day         -\n *    e3          -\n *    ee2         -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    gam         -\n *    peo         -\n *    pgho        -\n *    pho         -\n *    pinco       -\n *    plo         -\n *    rtemsq      -\n *    se2, se3         -\n *    sgh2, sgh3, sgh4        -\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\n *    nm          - mean motion\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *    zmol        -\n *    zmos        -\n *\n *  locals        :\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\n *    betasq      -\n *    cc          -\n *    ctem, stem        -\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\n *    xnodce      -\n *    xnoi        -\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\n *    zcosi  , zsini  , zcosil , zsinil ,\n *    zx          -\n *    zy          -\n *\n *  coupling      :\n *    none.\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dscom(options) {\n  var epoch = options.epoch,\n    ep = options.ep,\n    argpp = options.argpp,\n    tc = options.tc,\n    inclp = options.inclp,\n    nodep = options.nodep,\n    np = options.np;\n  var a1;\n  var a2;\n  var a3;\n  var a4;\n  var a5;\n  var a6;\n  var a7;\n  var a8;\n  var a9;\n  var a10;\n  var cc;\n  var x1;\n  var x2;\n  var x3;\n  var x4;\n  var x5;\n  var x6;\n  var x7;\n  var x8;\n  var zcosg;\n  var zsing;\n  var zcosh;\n  var zsinh;\n  var zcosi;\n  var zsini;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var ss6;\n  var ss7;\n  var sz1;\n  var sz2;\n  var sz3;\n  var sz11;\n  var sz12;\n  var sz13;\n  var sz21;\n  var sz22;\n  var sz23;\n  var sz31;\n  var sz32;\n  var sz33;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var s6;\n  var s7;\n  var z1;\n  var z2;\n  var z3;\n  var z11;\n  var z12;\n  var z13;\n  var z21;\n  var z22;\n  var z23;\n  var z31;\n  var z32;\n  var z33;\n\n  // -------------------------- constants -------------------------\n  var zes = 0.01675;\n  var zel = 0.05490;\n  var c1ss = 2.9864797e-6;\n  var c1l = 4.7968065e-7;\n  var zsinis = 0.39785416;\n  var zcosis = 0.91744867;\n  var zcosgs = 0.1945905;\n  var zsings = -0.98088458;\n\n  //  --------------------- local variables ------------------------\n  var nm = np;\n  var em = ep;\n  var snodm = Math.sin(nodep);\n  var cnodm = Math.cos(nodep);\n  var sinomm = Math.sin(argpp);\n  var cosomm = Math.cos(argpp);\n  var sinim = Math.sin(inclp);\n  var cosim = Math.cos(inclp);\n  var emsq = em * em;\n  var betasq = 1.0 - emsq;\n  var rtemsq = Math.sqrt(betasq);\n\n  //  ----------------- initialize lunar solar terms ---------------\n  var peo = 0.0;\n  var pinco = 0.0;\n  var plo = 0.0;\n  var pgho = 0.0;\n  var pho = 0.0;\n  var day = epoch + 18261.5 + tc / 1440.0;\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\n  var stem = Math.sin(xnodce);\n  var ctem = Math.cos(xnodce);\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\n  var zsinhl = 0.089683511 * stem / zsinil;\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\n  var gam = 5.8351514 + 0.0019443680 * day;\n  var zx = 0.39785416 * stem / zsinil;\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\n  zx = Math.atan2(zx, zy);\n  zx += gam - xnodce;\n  var zcosgl = Math.cos(zx);\n  var zsingl = Math.sin(zx);\n\n  //  ------------------------- do solar terms ---------------------\n  zcosg = zcosgs;\n  zsing = zsings;\n  zcosi = zcosis;\n  zsini = zsinis;\n  zcosh = cnodm;\n  zsinh = snodm;\n  cc = c1ss;\n  var xnoi = 1.0 / nm;\n  var lsflg = 0;\n  while (lsflg < 2) {\n    lsflg += 1;\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\n    a8 = zsing * zsini;\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\n    a10 = zcosg * zsini;\n    a2 = cosim * a7 + sinim * a8;\n    a4 = cosim * a9 + sinim * a10;\n    a5 = -sinim * a7 + cosim * a8;\n    a6 = -sinim * a9 + cosim * a10;\n    x1 = a1 * cosomm + a2 * sinomm;\n    x2 = a3 * cosomm + a4 * sinomm;\n    x3 = -a1 * sinomm + a2 * cosomm;\n    x4 = -a3 * sinomm + a4 * cosomm;\n    x5 = a5 * sinomm;\n    x6 = a6 * sinomm;\n    x7 = a5 * cosomm;\n    x8 = a6 * cosomm;\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\n    z1 = z1 + z1 + betasq * z31;\n    z2 = z2 + z2 + betasq * z32;\n    z3 = z3 + z3 + betasq * z33;\n    s3 = cc * xnoi;\n    s2 = -0.5 * s3 / rtemsq;\n    s4 = s3 * rtemsq;\n    s1 = -15.0 * em * s4;\n    s5 = x1 * x3 + x2 * x4;\n    s6 = x2 * x3 + x1 * x4;\n    s7 = x2 * x4 - x1 * x3;\n\n    //  ----------------------- do lunar terms -------------------\n    if (lsflg === 1) {\n      ss1 = s1;\n      ss2 = s2;\n      ss3 = s3;\n      ss4 = s4;\n      ss5 = s5;\n      ss6 = s6;\n      ss7 = s7;\n      sz1 = z1;\n      sz2 = z2;\n      sz3 = z3;\n      sz11 = z11;\n      sz12 = z12;\n      sz13 = z13;\n      sz21 = z21;\n      sz22 = z22;\n      sz23 = z23;\n      sz31 = z31;\n      sz32 = z32;\n      sz33 = z33;\n      zcosg = zcosgl;\n      zsing = zsingl;\n      zcosi = zcosil;\n      zsini = zsinil;\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\n      cc = c1l;\n    }\n  }\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi;\n\n  //  ------------------------ do solar terms ----------------------\n  var se2 = 2.0 * ss1 * ss6;\n  var se3 = 2.0 * ss1 * ss7;\n  var si2 = 2.0 * ss2 * sz12;\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\n  var sl2 = -2.0 * ss3 * sz2;\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\n  var sgh2 = 2.0 * ss4 * sz32;\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\n  var sgh4 = -18.0 * ss4 * zes;\n  var sh2 = -2.0 * ss2 * sz22;\n  var sh3 = -2.0 * ss2 * (sz23 - sz21);\n\n  //  ------------------------ do lunar terms ----------------------\n  var ee2 = 2.0 * s1 * s6;\n  var e3 = 2.0 * s1 * s7;\n  var xi2 = 2.0 * s2 * z12;\n  var xi3 = 2.0 * s2 * (z13 - z11);\n  var xl2 = -2.0 * s3 * z2;\n  var xl3 = -2.0 * s3 * (z3 - z1);\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\n  var xgh2 = 2.0 * s4 * z32;\n  var xgh3 = 2.0 * s4 * (z33 - z31);\n  var xgh4 = -18.0 * s4 * zel;\n  var xh2 = -2.0 * s2 * z22;\n  var xh3 = -2.0 * s2 * (z23 - z21);\n  return {\n    snodm: snodm,\n    cnodm: cnodm,\n    sinim: sinim,\n    cosim: cosim,\n    sinomm: sinomm,\n    cosomm: cosomm,\n    day: day,\n    e3: e3,\n    ee2: ee2,\n    em: em,\n    emsq: emsq,\n    gam: gam,\n    peo: peo,\n    pgho: pgho,\n    pho: pho,\n    pinco: pinco,\n    plo: plo,\n    rtemsq: rtemsq,\n    se2: se2,\n    se3: se3,\n    sgh2: sgh2,\n    sgh3: sgh3,\n    sgh4: sgh4,\n    sh2: sh2,\n    sh3: sh3,\n    si2: si2,\n    si3: si3,\n    sl2: sl2,\n    sl3: sl3,\n    sl4: sl4,\n    s1: s1,\n    s2: s2,\n    s3: s3,\n    s4: s4,\n    s5: s5,\n    s6: s6,\n    s7: s7,\n    ss1: ss1,\n    ss2: ss2,\n    ss3: ss3,\n    ss4: ss4,\n    ss5: ss5,\n    ss6: ss6,\n    ss7: ss7,\n    sz1: sz1,\n    sz2: sz2,\n    sz3: sz3,\n    sz11: sz11,\n    sz12: sz12,\n    sz13: sz13,\n    sz21: sz21,\n    sz22: sz22,\n    sz23: sz23,\n    sz31: sz31,\n    sz32: sz32,\n    sz33: sz33,\n    xgh2: xgh2,\n    xgh3: xgh3,\n    xgh4: xgh4,\n    xh2: xh2,\n    xh3: xh3,\n    xi2: xi2,\n    xi3: xi3,\n    xl2: xl2,\n    xl3: xl3,\n    xl4: xl4,\n    nm: nm,\n    z1: z1,\n    z2: z2,\n    z3: z3,\n    z11: z11,\n    z12: z12,\n    z13: z13,\n    z21: z21,\n    z22: z22,\n    z23: z23,\n    z31: z31,\n    z32: z32,\n    z33: z33,\n    zmol: zmol,\n    zmos: zmos\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dsinit\n *\n *  this procedure provides deep space contributions to mean motion dot due\n *    to geopotential resonance with half day and one day orbits.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    cosim, sinim-\n *    emsq        - eccentricity squared\n *    argpo       - argument of perigee\n *    s1, s2, s3, s4, s5      -\n *    ss1, ss2, ss3, ss4, ss5 -\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\n *    t           - time\n *    tc          -\n *    gsto        - greenwich sidereal time                   rad\n *    mo          - mean anomaly\n *    mdot        - mean anomaly dot (rate)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *    nodedot     - right ascension of ascending node dot (rate)\n *    xpidot      -\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\n *    eccm        - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    xn          - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right ascension of ascending node\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    atime       -\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\n *    dedt        -\n *    didt        -\n *    dmdt        -\n *    dndt        -\n *    dnodt       -\n *    domdt       -\n *    del1, del2, del3        -\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\n *    theta       -\n *    xfact       -\n *    xlamo       -\n *    xli         -\n *    xni\n *\n *  locals        :\n *    ainv2       -\n *    aonv        -\n *    cosisq      -\n *    eoc         -\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\n *    sini2       -\n *    temp        -\n *    temp1       -\n *    theta       -\n *    xno2        -\n *\n *  coupling      :\n *    getgravconst\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dsinit(options) {\n  var cosim = options.cosim,\n    argpo = options.argpo,\n    s1 = options.s1,\n    s2 = options.s2,\n    s3 = options.s3,\n    s4 = options.s4,\n    s5 = options.s5,\n    sinim = options.sinim,\n    ss1 = options.ss1,\n    ss2 = options.ss2,\n    ss3 = options.ss3,\n    ss4 = options.ss4,\n    ss5 = options.ss5,\n    sz1 = options.sz1,\n    sz3 = options.sz3,\n    sz11 = options.sz11,\n    sz13 = options.sz13,\n    sz21 = options.sz21,\n    sz23 = options.sz23,\n    sz31 = options.sz31,\n    sz33 = options.sz33,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    mo = options.mo,\n    mdot = options.mdot,\n    no = options.no,\n    nodeo = options.nodeo,\n    nodedot = options.nodedot,\n    xpidot = options.xpidot,\n    z1 = options.z1,\n    z3 = options.z3,\n    z11 = options.z11,\n    z13 = options.z13,\n    z21 = options.z21,\n    z23 = options.z23,\n    z31 = options.z31,\n    z33 = options.z33,\n    ecco = options.ecco,\n    eccsq = options.eccsq;\n  var emsq = options.emsq,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    mm = options.mm,\n    nm = options.nm,\n    nodem = options.nodem,\n    irez = options.irez,\n    atime = options.atime,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    xli = options.xli,\n    xni = options.xni;\n  var f220;\n  var f221;\n  var f311;\n  var f321;\n  var f322;\n  var f330;\n  var f441;\n  var f442;\n  var f522;\n  var f523;\n  var f542;\n  var f543;\n  var g200;\n  var g201;\n  var g211;\n  var g300;\n  var g310;\n  var g322;\n  var g410;\n  var g422;\n  var g520;\n  var g521;\n  var g532;\n  var g533;\n  var sini2;\n  var temp;\n  var temp1;\n  var xno2;\n  var ainv2;\n  var aonv;\n  var cosisq;\n  var eoc;\n  var q22 = 1.7891679e-6;\n  var q31 = 2.1460748e-6;\n  var q33 = 2.2123015e-7;\n  var root22 = 1.7891679e-6;\n  var root44 = 7.3636953e-9;\n  var root54 = 2.1765803e-9;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var root32 = 3.7393792e-7;\n  var root52 = 1.1428639e-7;\n  var znl = 1.5835218e-4;\n  var zns = 1.19459e-5;\n\n  // -------------------- deep space initialization ------------\n  irez = 0;\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\n    irez = 1;\n  }\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\n    irez = 2;\n  }\n\n  // ------------------------ do solar terms -------------------\n  var ses = ss1 * zns * ss5;\n  var sis = ss2 * zns * (sz11 + sz13);\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\n  var shs = -zns * ss2 * (sz21 + sz23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shs = 0.0;\n  }\n  if (sinim !== 0.0) {\n    shs /= sinim;\n  }\n  var sgs = sghs - cosim * shs;\n\n  // ------------------------- do lunar terms ------------------\n  dedt = ses + s1 * znl * s5;\n  didt = sis + s2 * znl * (z11 + z13);\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\n  var shll = -znl * s2 * (z21 + z23);\n\n  // sgp4fix for 180 deg incl\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\n    shll = 0.0;\n  }\n  domdt = sgs + sghl;\n  dnodt = shs;\n  if (sinim !== 0.0) {\n    domdt -= cosim / sinim * shll;\n    dnodt += shll / sinim;\n  }\n\n  // ----------- calculate deep space resonance effects --------\n  var dndt = 0.0;\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm  = -inclm;\n  //   argpm  = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  // -------------- initialize the resonance terms -------------\n  if (irez !== 0) {\n    aonv = Math.pow(nm / xke, x2o3);\n\n    // ---------- geopotential resonance for 12 hour orbits ------\n    if (irez === 2) {\n      cosisq = cosim * cosim;\n      var emo = em;\n      em = ecco;\n      var emsqo = emsq;\n      emsq = eccsq;\n      eoc = em * emsq;\n      g201 = -0.306 - (em - 0.64) * 0.440;\n      if (em <= 0.65) {\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\n      } else {\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\n        if (em > 0.715) {\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\n        } else {\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\n        }\n      }\n      if (em < 0.7) {\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\n      } else {\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\n      }\n      sini2 = sinim * sinim;\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\n      f221 = 1.5 * sini2;\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\n      f441 = 35.0 * sini2 * f220;\n      f442 = 39.3750 * sini2 * sini2;\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\n      xno2 = nm * nm;\n      ainv2 = aonv * aonv;\n      temp1 = 3.0 * xno2 * ainv2;\n      temp = temp1 * root22;\n      d2201 = temp * f220 * g201;\n      d2211 = temp * f221 * g211;\n      temp1 *= aonv;\n      temp = temp1 * root32;\n      d3210 = temp * f321 * g310;\n      d3222 = temp * f322 * g322;\n      temp1 *= aonv;\n      temp = 2.0 * temp1 * root44;\n      d4410 = temp * f441 * g410;\n      d4422 = temp * f442 * g422;\n      temp1 *= aonv;\n      temp = temp1 * root52;\n      d5220 = temp * f522 * g520;\n      d5232 = temp * f523 * g532;\n      temp = 2.0 * temp1 * root54;\n      d5421 = temp * f542 * g521;\n      d5433 = temp * f543 * g533;\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\n      em = emo;\n      emsq = emsqo;\n    }\n\n    //  ---------------- synchronous resonance terms --------------\n    if (irez === 1) {\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\n      g310 = 1.0 + 2.0 * emsq;\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\n      f330 = 1.0 + cosim;\n      f330 *= 1.875 * f330 * f330;\n      del1 = 3.0 * nm * nm * aonv * aonv;\n      del2 = 2.0 * del1 * f220 * g200 * q22;\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\n      del1 = del1 * f311 * g310 * q31 * aonv;\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\n    }\n\n    //  ------------ for sgp4, initialize the integrator ----------\n    xli = xlamo;\n    xni = no;\n    atime = 0.0;\n    nm = no + dndt;\n  }\n  return {\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    mm: mm,\n    nm: nm,\n    nodem: nodem,\n    irez: irez,\n    atime: atime,\n    d2201: d2201,\n    d2211: d2211,\n    d3210: d3210,\n    d3222: d3222,\n    d4410: d4410,\n    d4422: d4422,\n    d5220: d5220,\n    d5232: d5232,\n    d5421: d5421,\n    d5433: d5433,\n    dedt: dedt,\n    didt: didt,\n    dmdt: dmdt,\n    dndt: dndt,\n    dnodt: dnodt,\n    domdt: domdt,\n    del1: del1,\n    del2: del2,\n    del3: del3,\n    xfact: xfact,\n    xlamo: xlamo,\n    xli: xli,\n    xni: xni\n  };\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function gstime\n *\n *  this function finds the greenwich sidereal time.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs          description                    range / units\n *    jdut1       - julian date in ut1             days from 4713 bc\n *\n *  outputs       :\n *    gstime      - greenwich sidereal time        0 to 2pi rad\n *\n *  locals        :\n *    temp        - temporary variable for doubles   rad\n *    tut1        - julian centuries from the\n *                  jan 1, 2000 12 h epoch (ut1)\n *\n *  coupling      :\n *    none\n *\n *  references    :\n *    vallado       2004, 191, eq 3-45\n * --------------------------------------------------------------------------- */\nfunction gstimeInternal(jdut1) {\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\n\n  //  ------------------------ check quadrants ---------------------\n  if (temp < 0.0) {\n    temp += twoPi;\n  }\n  return temp;\n}\nfunction gstime() {\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\n    return gstimeInternal(jday.apply(void 0, arguments));\n  }\n  return gstimeInternal.apply(void 0, arguments);\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure initl\n *\n *  this procedure initializes the sgp4 propagator. all the initialization is\n *    consolidated here instead of having multiple loops inside other routines.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    ecco        - eccentricity                           0.0 - 1.0\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    inclo       - inclination of satellite\n *    no          - mean motion of satellite\n *    satn        - satellite number\n *\n *  outputs       :\n *    ainv        - 1.0 / a\n *    ao          - semi major axis\n *    con41       -\n *    con42       - 1.0 - 5.0 cos(i)\n *    cosio       - cosine of inclination\n *    cosio2      - cosio squared\n *    eccsq       - eccentricity squared\n *    method      - flag for deep space                    'd', 'n'\n *    omeosq      - 1.0 - ecco * ecco\n *    posq        - semi-parameter squared\n *    rp          - radius of perigee\n *    rteosq      - square root of (1.0 - ecco*ecco)\n *    sinio       - sine of inclination\n *    gsto        - gst at time of observation               rad\n *    no          - mean motion of satellite\n *\n *  locals        :\n *    ak          -\n *    d1          -\n *    del         -\n *    adel        -\n *    po          -\n *\n *  coupling      :\n *    getgravconst\n *    gstime      - find greenwich sidereal time from the julian date\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction initl(options) {\n  var ecco = options.ecco,\n    epoch = options.epoch,\n    inclo = options.inclo,\n    opsmode = options.opsmode;\n  var no = options.no;\n\n  // sgp4fix use old way of finding gst\n  // ----------------------- earth constants ---------------------\n  // sgp4fix identify constants and allow alternate values\n\n  // ------------- calculate auxillary epoch quantities ----------\n  var eccsq = ecco * ecco;\n  var omeosq = 1.0 - eccsq;\n  var rteosq = Math.sqrt(omeosq);\n  var cosio = Math.cos(inclo);\n  var cosio2 = cosio * cosio;\n\n  // ------------------ un-kozai the mean motion -----------------\n  var ak = Math.pow(xke / no, x2o3);\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\n  var delPrime = d1 / (ak * ak);\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\n  delPrime = d1 / (adel * adel);\n  no /= 1.0 + delPrime;\n  var ao = Math.pow(xke / no, x2o3);\n  var sinio = Math.sin(inclo);\n  var po = ao * omeosq;\n  var con42 = 1.0 - 5.0 * cosio2;\n  var con41 = -con42 - cosio2 - cosio2;\n  var ainv = 1.0 / ao;\n  var posq = po * po;\n  var rp = ao * (1.0 - ecco);\n  var method = 'n';\n\n  //  sgp4fix modern approach to finding sidereal time\n  var gsto;\n  if (opsmode === 'a') {\n    //  sgp4fix use old way of finding gst\n    //  count integer number of days from 0 jan 1970\n    var ts70 = epoch - 7305.0;\n    var ds70 = Math.floor(ts70 + 1.0e-8);\n    var tfrac = ts70 - ds70;\n\n    //  find greenwich location at epoch\n    var c1 = 1.72027916940703639e-2; // eslint-disable-line no-loss-of-precision\n    var thgr70 = 1.7321343856509374; // eslint-disable-line no-loss-of-precision\n    var fk5r = 5.07551419432269442e-15; // eslint-disable-line no-loss-of-precision\n    var c1p2p = c1 + twoPi;\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\n    if (gsto < 0.0) {\n      gsto += twoPi;\n    }\n  } else {\n    gsto = gstime(epoch + 2433281.5);\n  }\n  return {\n    no: no,\n    method: method,\n    ainv: ainv,\n    ao: ao,\n    con41: con41,\n    con42: con42,\n    cosio: cosio,\n    cosio2: cosio2,\n    eccsq: eccsq,\n    omeosq: omeosq,\n    posq: posq,\n    rp: rp,\n    rteosq: rteosq,\n    sinio: sinio,\n    gsto: gsto\n  };\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                           procedure dspace\n *\n *  this procedure provides deep space contributions to mean elements for\n *    perturbing third body.  these effects have been averaged over one\n *    revolution of the sun and moon.  for earth resonance effects, the\n *    effects have been averaged over no revolutions of the satellite.\n *    (mean motion)\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\n *    dedt        -\n *    del1, del2, del3  -\n *    didt        -\n *    dmdt        -\n *    dnodt       -\n *    domdt       -\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\n *    argpo       - argument of perigee\n *    argpdot     - argument of perigee dot (rate)\n *    t           - time\n *    tc          -\n *    gsto        - gst\n *    xfact       -\n *    xlamo       -\n *    no          - mean motion\n *    atime       -\n *    em          - eccentricity\n *    ft          -\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         - mean motion\n *    nodem       - right ascension of ascending node\n *\n *  outputs       :\n *    atime       -\n *    em          - eccentricity\n *    argpm       - argument of perigee\n *    inclm       - inclination\n *    xli         -\n *    mm          - mean anomaly\n *    xni         -\n *    nodem       - right ascension of ascending node\n *    dndt        -\n *    nm          - mean motion\n *\n *  locals        :\n *    delt        -\n *    ft          -\n *    theta       -\n *    x2li        -\n *    x2omi       -\n *    xl          -\n *    xldot       -\n *    xnddt       -\n *    xndt        -\n *    xomi        -\n *\n *  coupling      :\n *    none        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction dspace(options) {\n  var irez = options.irez,\n    d2201 = options.d2201,\n    d2211 = options.d2211,\n    d3210 = options.d3210,\n    d3222 = options.d3222,\n    d4410 = options.d4410,\n    d4422 = options.d4422,\n    d5220 = options.d5220,\n    d5232 = options.d5232,\n    d5421 = options.d5421,\n    d5433 = options.d5433,\n    dedt = options.dedt,\n    del1 = options.del1,\n    del2 = options.del2,\n    del3 = options.del3,\n    didt = options.didt,\n    dmdt = options.dmdt,\n    dnodt = options.dnodt,\n    domdt = options.domdt,\n    argpo = options.argpo,\n    argpdot = options.argpdot,\n    t = options.t,\n    tc = options.tc,\n    gsto = options.gsto,\n    xfact = options.xfact,\n    xlamo = options.xlamo,\n    no = options.no;\n  var atime = options.atime,\n    em = options.em,\n    argpm = options.argpm,\n    inclm = options.inclm,\n    xli = options.xli,\n    mm = options.mm,\n    xni = options.xni,\n    nodem = options.nodem,\n    nm = options.nm;\n  var fasx2 = 0.13130908;\n  var fasx4 = 2.8843198;\n  var fasx6 = 0.37448087;\n  var g22 = 5.7686396;\n  var g32 = 0.95240898;\n  var g44 = 1.8014998;\n  var g52 = 1.0508330;\n  var g54 = 4.4108898;\n  // eslint-disable-next-line no-loss-of-precision\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\n  var stepp = 720.0;\n  var stepn = -720.0;\n  var step2 = 259200.0;\n  var delt;\n  var x2li;\n  var x2omi;\n  var xl;\n  var xldot;\n  var xnddt;\n  var xndt;\n  var xomi;\n  var dndt = 0.0;\n  var ft = 0.0;\n\n  //  ----------- calculate deep space resonance effects -----------\n  var theta = (gsto + tc * rptim) % twoPi;\n  em += dedt * t;\n  inclm += didt * t;\n  argpm += domdt * t;\n  nodem += dnodt * t;\n  mm += dmdt * t;\n\n  // sgp4fix for negative inclinations\n  // the following if statement should be commented out\n  // if (inclm < 0.0)\n  // {\n  //   inclm = -inclm;\n  //   argpm = argpm - pi;\n  //   nodem = nodem + pi;\n  // }\n\n  /* - update resonances : numerical (euler-maclaurin) integration - */\n  /* ------------------------- epoch restart ----------------------  */\n  //   sgp4fix for propagator problems\n  //   the following integration works for negative time steps and periods\n  //   the specific changes are unknown because the original code was so convoluted\n\n  // sgp4fix take out atime = 0.0 and fix for faster operation\n\n  if (irez !== 0) {\n    //  sgp4fix streamline check\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\n      atime = 0.0;\n      xni = no;\n      xli = xlamo;\n    }\n\n    // sgp4fix move check outside loop\n    if (t > 0.0) {\n      delt = stepp;\n    } else {\n      delt = stepn;\n    }\n    var iretn = 381; // added for do loop\n    while (iretn === 381) {\n      //  ------------------- dot terms calculated -------------\n      //  ----------- near - synchronous resonance terms -------\n      if (irez !== 2) {\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\n        xldot = xni + xfact;\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\n        xnddt *= xldot;\n      } else {\n        // --------- near - half-day resonance terms --------\n        xomi = argpo + argpdot * atime;\n        x2omi = xomi + xomi;\n        x2li = xli + xli;\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\n        xldot = xni + xfact;\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * (d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54));\n        xnddt *= xldot;\n      }\n\n      //  ----------------------- integrator -------------------\n      //  sgp4fix move end checks to end of routine\n      if (Math.abs(t - atime) >= stepp) {\n        iretn = 381;\n      } else {\n        ft = t - atime;\n        iretn = 0;\n      }\n      if (iretn === 381) {\n        xli += xldot * delt + xndt * step2;\n        xni += xndt * delt + xnddt * step2;\n        atime += delt;\n      }\n    }\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\n    if (irez !== 1) {\n      mm = xl - 2.0 * nodem + 2.0 * theta;\n      dndt = nm - no;\n    } else {\n      mm = xl - nodem - argpm + theta;\n      dndt = nm - no;\n    }\n    nm = no + dndt;\n  }\n  return {\n    atime: atime,\n    em: em,\n    argpm: argpm,\n    inclm: inclm,\n    xli: xli,\n    mm: mm,\n    xni: xni,\n    nodem: nodem,\n    dndt: dndt,\n    nm: nm\n  };\n}\n\n/*----------------------------------------------------------------------------\n *\n *                             procedure sgp4\n *\n *  this procedure is the sgp4 prediction model from space command. this is an\n *    updated and combined version of sgp4 and sdp4, which were originally\n *    published separately in spacetrack report //3. this version follows the\n *    methodology from the aiaa paper (2006) describing the history and\n *    development of the code.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    satrec  - initialised structure from sgp4init() call.\n *    tsince  - time since epoch (minutes)\n *\n *  outputs       :\n *    r           - position vector                     km\n *    v           - velocity                            km/sec\n *  return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    am          -\n *    axnl, aynl        -\n *    betal       -\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\n *    delm        -\n *    delomg      -\n *    dndt        -\n *    eccm        -\n *    emsq        -\n *    ecose       -\n *    el2         -\n *    eo1         -\n *    eccp        -\n *    esine       -\n *    argpm       -\n *    argpp       -\n *    omgadf      -\n *    pl          -\n *    r           -\n *    rtemsq      -\n *    rdotl       -\n *    rl          -\n *    rvdot       -\n *    rvdotl      -\n *    su          -\n *    t2  , t3   , t4    , tc\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    nodem       - right asc of ascending node\n *    xinc        -\n *    xincp       -\n *    xl          -\n *    xlm         -\n *    mp          -\n *    xmdf        -\n *    xmx         -\n *    xmy         -\n *    nodedf      -\n *    xnode       -\n *    nodep       -\n *    np          -\n *\n *  coupling      :\n *    getgravconst-\n *    dpper\n *    dspace\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report //3 1980\n *    hoots, norad spacetrack report //6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4(satrec, tsince) {\n  /* eslint-disable no-param-reassign */\n\n  var coseo1;\n  var sineo1;\n  var cosip;\n  var sinip;\n  var cosisq;\n  var delm;\n  var delomg;\n  var eo1;\n  var argpm;\n  var argpp;\n  var su;\n  var t3;\n  var t4;\n  var tc;\n  var tem5;\n  var temp;\n  var tempa;\n  var tempe;\n  var templ;\n  var inclm;\n  var mm;\n  var nm;\n  var nodem;\n  var xincp;\n  var xlm;\n  var mp;\n  var nodep;\n\n  /* ------------------ set mathematical constants --------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n\n  var temp4 = 1.5e-12;\n\n  // --------------------- clear sgp4 error flag -----------------\n  satrec.t = tsince;\n  satrec.error = 0;\n\n  //  ------- update for secular gravity and atmospheric drag -----\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\n  argpm = argpdf;\n  mm = xmdf;\n  var t2 = satrec.t * satrec.t;\n  nodem = nodedf + satrec.nodecf * t2;\n  tempa = 1.0 - satrec.cc1 * satrec.t;\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\n  templ = satrec.t2cof * t2;\n  if (satrec.isimp !== 1) {\n    delomg = satrec.omgcof * satrec.t;\n    //  sgp4fix use mutliply for speed instead of pow\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\n    temp = delomg + delm;\n    mm = xmdf + temp;\n    argpm = argpdf - temp;\n    t3 = t2 * satrec.t;\n    t4 = t3 * satrec.t;\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\n  }\n  nm = satrec.no;\n  var em = satrec.ecco;\n  inclm = satrec.inclo;\n  if (satrec.method === 'd') {\n    tc = satrec.t;\n    var dspaceOptions = {\n      irez: satrec.irez,\n      d2201: satrec.d2201,\n      d2211: satrec.d2211,\n      d3210: satrec.d3210,\n      d3222: satrec.d3222,\n      d4410: satrec.d4410,\n      d4422: satrec.d4422,\n      d5220: satrec.d5220,\n      d5232: satrec.d5232,\n      d5421: satrec.d5421,\n      d5433: satrec.d5433,\n      dedt: satrec.dedt,\n      del1: satrec.del1,\n      del2: satrec.del2,\n      del3: satrec.del3,\n      didt: satrec.didt,\n      dmdt: satrec.dmdt,\n      dnodt: satrec.dnodt,\n      domdt: satrec.domdt,\n      argpo: satrec.argpo,\n      argpdot: satrec.argpdot,\n      t: satrec.t,\n      tc: tc,\n      gsto: satrec.gsto,\n      xfact: satrec.xfact,\n      xlamo: satrec.xlamo,\n      no: satrec.no,\n      atime: satrec.atime,\n      em: em,\n      argpm: argpm,\n      inclm: inclm,\n      xli: satrec.xli,\n      mm: mm,\n      xni: satrec.xni,\n      nodem: nodem,\n      nm: nm\n    };\n    var dspaceResult = dspace(dspaceOptions);\n    em = dspaceResult.em;\n    argpm = dspaceResult.argpm;\n    inclm = dspaceResult.inclm;\n    mm = dspaceResult.mm;\n    nodem = dspaceResult.nodem;\n    nm = dspaceResult.nm;\n  }\n  if (nm <= 0.0) {\n    // printf(\"// error nm %f\\n\", nm);\n    satrec.error = 2;\n    // sgp4fix add return\n    return [false, false];\n  }\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\n  nm = xke / Math.pow(am, 1.5);\n  em -= tempe;\n\n  // fix tolerance for error recognition\n  // sgp4fix am is fixed from the previous nm check\n  if (em >= 1.0 || em < -0.001) {\n    // || (am < 0.95)\n    // printf(\"// error em %f\\n\", em);\n    satrec.error = 1;\n    // sgp4fix to return if there is an error in eccentricity\n    return [false, false];\n  }\n\n  //  sgp4fix fix tolerance to avoid a divide by zero\n  if (em < 1.0e-6) {\n    em = 1.0e-6;\n  }\n  mm += satrec.no * templ;\n  xlm = mm + argpm + nodem;\n  nodem %= twoPi;\n  argpm %= twoPi;\n  xlm %= twoPi;\n  mm = (xlm - argpm - nodem) % twoPi;\n\n  // ----------------- compute extra mean quantities -------------\n  var sinim = Math.sin(inclm);\n  var cosim = Math.cos(inclm);\n\n  // -------------------- add lunar-solar periodics --------------\n  var ep = em;\n  xincp = inclm;\n  argpp = argpm;\n  nodep = nodem;\n  mp = mm;\n  sinip = sinim;\n  cosip = cosim;\n  if (satrec.method === 'd') {\n    var dpperParameters = {\n      inclo: satrec.inclo,\n      init: 'n',\n      ep: ep,\n      inclp: xincp,\n      nodep: nodep,\n      argpp: argpp,\n      mp: mp,\n      opsmode: satrec.operationmode\n    };\n    var dpperResult = dpper(satrec, dpperParameters);\n    ep = dpperResult.ep;\n    nodep = dpperResult.nodep;\n    argpp = dpperResult.argpp;\n    mp = dpperResult.mp;\n    xincp = dpperResult.inclp;\n    if (xincp < 0.0) {\n      xincp = -xincp;\n      nodep += pi;\n      argpp -= pi;\n    }\n    if (ep < 0.0 || ep > 1.0) {\n      //  printf(\"// error ep %f\\n\", ep);\n      satrec.error = 3;\n      //  sgp4fix add return\n      return [false, false];\n    }\n  }\n\n  //  -------------------- long period periodics ------------------\n  if (satrec.method === 'd') {\n    sinip = Math.sin(xincp);\n    cosip = Math.cos(xincp);\n    satrec.aycof = -0.5 * j3oj2 * sinip;\n\n    //  sgp4fix for divide by zero for xincp = 180 deg\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\n    }\n  }\n  var axnl = ep * Math.cos(argpp);\n  temp = 1.0 / (am * (1.0 - ep * ep));\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl;\n\n  // --------------------- solve kepler's equation ---------------\n  var u = (xl - nodep) % twoPi;\n  eo1 = u;\n  tem5 = 9999.9;\n  var ktr = 1;\n\n  //    sgp4fix for kepler iteration\n  //    the following iteration needs better limits on corrections\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\n    sineo1 = Math.sin(eo1);\n    coseo1 = Math.cos(eo1);\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\n    if (Math.abs(tem5) >= 0.95) {\n      if (tem5 > 0.0) {\n        tem5 = 0.95;\n      } else {\n        tem5 = -0.95;\n      }\n    }\n    eo1 += tem5;\n    ktr += 1;\n  }\n\n  //  ------------- short period preliminary quantities -----------\n  var ecose = axnl * coseo1 + aynl * sineo1;\n  var esine = axnl * sineo1 - aynl * coseo1;\n  var el2 = axnl * axnl + aynl * aynl;\n  var pl = am * (1.0 - el2);\n  if (pl < 0.0) {\n    //  printf(\"// error pl %f\\n\", pl);\n    satrec.error = 4;\n    //  sgp4fix add return\n    return [false, false];\n  }\n  var rl = am * (1.0 - ecose);\n  var rdotl = Math.sqrt(am) * esine / rl;\n  var rvdotl = Math.sqrt(pl) / rl;\n  var betal = Math.sqrt(1.0 - el2);\n  temp = esine / (1.0 + betal);\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\n  su = Math.atan2(sinu, cosu);\n  var sin2u = (cosu + cosu) * sinu;\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\n  temp = 1.0 / pl;\n  var temp1 = 0.5 * j2 * temp;\n  var temp2 = temp1 * temp;\n\n  // -------------- update for short period periodics ------------\n  if (satrec.method === 'd') {\n    cosisq = cosip * cosip;\n    satrec.con41 = 3.0 * cosisq - 1.0;\n    satrec.x1mth2 = 1.0 - cosisq;\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\n  }\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u;\n\n  // sgp4fix for decaying satellites\n  if (mrt < 1.0) {\n    // printf(\"// decay condition %11.6f \\n\",mrt);\n    satrec.error = 6;\n    return {\n      position: false,\n      velocity: false\n    };\n  }\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke;\n\n  // --------------------- orientation vectors -------------------\n  var sinsu = Math.sin(su);\n  var cossu = Math.cos(su);\n  var snod = Math.sin(xnode);\n  var cnod = Math.cos(xnode);\n  var sini = Math.sin(xinc);\n  var cosi = Math.cos(xinc);\n  var xmx = -snod * cosi;\n  var xmy = cnod * cosi;\n  var ux = xmx * sinsu + cnod * cossu;\n  var uy = xmy * sinsu + snod * cossu;\n  var uz = sini * sinsu;\n  var vx = xmx * cossu - cnod * sinsu;\n  var vy = xmy * cossu - snod * sinsu;\n  var vz = sini * cossu;\n\n  // --------- position and velocity (in km and km/sec) ----------\n  var r = {\n    x: mrt * ux * earthRadius,\n    y: mrt * uy * earthRadius,\n    z: mrt * uz * earthRadius\n  };\n  var v = {\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\n    z: (mvt * uz + rvdot * vz) * vkmpersec\n  };\n  return {\n    position: r,\n    velocity: v\n  };\n\n  /* eslint-enable no-param-reassign */\n}\n\n/*-----------------------------------------------------------------------------\n *\n *                             procedure sgp4init\n *\n *  this procedure initializes variables for sgp4.\n *\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *  author        : david vallado                  719-573-2600   28 jun 2005\n *\n *  inputs        :\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    satn        - satellite number\n *    bstar       - sgp4 type drag coefficient              kg/m2er\n *    ecco        - eccentricity\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\n *    argpo       - argument of perigee (output if ds)\n *    inclo       - inclination\n *    mo          - mean anomaly (output if ds)\n *    no          - mean motion\n *    nodeo       - right ascension of ascending node\n *\n *  outputs       :\n *    rec      - common values for subsequent calls\n *    return code - non-zero on error.\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\n *                   2 - mean motion less than 0.0\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\n *                   4 - semi-latus rectum < 0.0\n *                   5 - epoch elements are sub-orbital\n *                   6 - satellite has decayed\n *\n *  locals        :\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\n *    cc1sq  , cc2    , cc3\n *    coef   , coef1\n *    cosio4      -\n *    day         -\n *    dndt        -\n *    em          - eccentricity\n *    emsq        - eccentricity squared\n *    eeta        -\n *    etasq       -\n *    gam         -\n *    argpm       - argument of perigee\n *    nodem       -\n *    inclm       - inclination\n *    mm          - mean anomaly\n *    nm          - mean motion\n *    perige      - perigee\n *    pinvsq      -\n *    psisq       -\n *    qzms24      -\n *    rtemsq      -\n *    s1, s2, s3, s4, s5, s6, s7          -\n *    sfour       -\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\n *    sz1, sz2, sz3\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\n *    tc          -\n *    temp        -\n *    temp1, temp2, temp3       -\n *    tsi         -\n *    xpidot      -\n *    xhdot1      -\n *    z1, z2, z3          -\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\n *\n *  coupling      :\n *    getgravconst-\n *    initl       -\n *    dscom       -\n *    dpper       -\n *    dsinit      -\n *    sgp4        -\n *\n *  references    :\n *    hoots, roehrich, norad spacetrack report #3 1980\n *    hoots, norad spacetrack report #6 1986\n *    hoots, schumacher and glover 2004\n *    vallado, crawford, hujsak, kelso  2006\n ----------------------------------------------------------------------------*/\nfunction sgp4init(satrec, options) {\n  /* eslint-disable no-param-reassign */\n\n  var opsmode = options.opsmode,\n    satn = options.satn,\n    epoch = options.epoch,\n    xbstar = options.xbstar,\n    xecco = options.xecco,\n    xargpo = options.xargpo,\n    xinclo = options.xinclo,\n    xmo = options.xmo,\n    xno = options.xno,\n    xnodeo = options.xnodeo;\n  var cosim;\n  var sinim;\n  var cc1sq;\n  var cc2;\n  var cc3;\n  var coef;\n  var coef1;\n  var cosio4;\n  var em;\n  var emsq;\n  var eeta;\n  var etasq;\n  var argpm;\n  var nodem;\n  var inclm;\n  var mm;\n  var nm;\n  var perige;\n  var pinvsq;\n  var psisq;\n  var qzms24;\n  var s1;\n  var s2;\n  var s3;\n  var s4;\n  var s5;\n  var sfour;\n  var ss1;\n  var ss2;\n  var ss3;\n  var ss4;\n  var ss5;\n  var sz1;\n  var sz3;\n  var sz11;\n  var sz13;\n  var sz21;\n  var sz23;\n  var sz31;\n  var sz33;\n  var tc;\n  var temp;\n  var temp1;\n  var temp2;\n  var temp3;\n  var tsi;\n  var xpidot;\n  var xhdot1;\n  var z1;\n  var z3;\n  var z11;\n  var z13;\n  var z21;\n  var z23;\n  var z31;\n  var z33;\n\n  /* ------------------------ initialization --------------------- */\n  // sgp4fix divisor for divide by zero check on inclination\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\n  var temp4 = 1.5e-12;\n\n  // ----------- set all near earth variables to zero ------------\n  satrec.isimp = 0;\n  satrec.method = 'n';\n  satrec.aycof = 0.0;\n  satrec.con41 = 0.0;\n  satrec.cc1 = 0.0;\n  satrec.cc4 = 0.0;\n  satrec.cc5 = 0.0;\n  satrec.d2 = 0.0;\n  satrec.d3 = 0.0;\n  satrec.d4 = 0.0;\n  satrec.delmo = 0.0;\n  satrec.eta = 0.0;\n  satrec.argpdot = 0.0;\n  satrec.omgcof = 0.0;\n  satrec.sinmao = 0.0;\n  satrec.t = 0.0;\n  satrec.t2cof = 0.0;\n  satrec.t3cof = 0.0;\n  satrec.t4cof = 0.0;\n  satrec.t5cof = 0.0;\n  satrec.x1mth2 = 0.0;\n  satrec.x7thm1 = 0.0;\n  satrec.mdot = 0.0;\n  satrec.nodedot = 0.0;\n  satrec.xlcof = 0.0;\n  satrec.xmcof = 0.0;\n  satrec.nodecf = 0.0;\n\n  // ----------- set all deep space variables to zero ------------\n  satrec.irez = 0;\n  satrec.d2201 = 0.0;\n  satrec.d2211 = 0.0;\n  satrec.d3210 = 0.0;\n  satrec.d3222 = 0.0;\n  satrec.d4410 = 0.0;\n  satrec.d4422 = 0.0;\n  satrec.d5220 = 0.0;\n  satrec.d5232 = 0.0;\n  satrec.d5421 = 0.0;\n  satrec.d5433 = 0.0;\n  satrec.dedt = 0.0;\n  satrec.del1 = 0.0;\n  satrec.del2 = 0.0;\n  satrec.del3 = 0.0;\n  satrec.didt = 0.0;\n  satrec.dmdt = 0.0;\n  satrec.dnodt = 0.0;\n  satrec.domdt = 0.0;\n  satrec.e3 = 0.0;\n  satrec.ee2 = 0.0;\n  satrec.peo = 0.0;\n  satrec.pgho = 0.0;\n  satrec.pho = 0.0;\n  satrec.pinco = 0.0;\n  satrec.plo = 0.0;\n  satrec.se2 = 0.0;\n  satrec.se3 = 0.0;\n  satrec.sgh2 = 0.0;\n  satrec.sgh3 = 0.0;\n  satrec.sgh4 = 0.0;\n  satrec.sh2 = 0.0;\n  satrec.sh3 = 0.0;\n  satrec.si2 = 0.0;\n  satrec.si3 = 0.0;\n  satrec.sl2 = 0.0;\n  satrec.sl3 = 0.0;\n  satrec.sl4 = 0.0;\n  satrec.gsto = 0.0;\n  satrec.xfact = 0.0;\n  satrec.xgh2 = 0.0;\n  satrec.xgh3 = 0.0;\n  satrec.xgh4 = 0.0;\n  satrec.xh2 = 0.0;\n  satrec.xh3 = 0.0;\n  satrec.xi2 = 0.0;\n  satrec.xi3 = 0.0;\n  satrec.xl2 = 0.0;\n  satrec.xl3 = 0.0;\n  satrec.xl4 = 0.0;\n  satrec.xlamo = 0.0;\n  satrec.zmol = 0.0;\n  satrec.zmos = 0.0;\n  satrec.atime = 0.0;\n  satrec.xli = 0.0;\n  satrec.xni = 0.0;\n\n  // sgp4fix - note the following variables are also passed directly via satrec.\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\n  // variables, but the user would need to set the satrec.* values first. we\n  // include the additional assignments in case twoline2rv is not used.\n\n  satrec.bstar = xbstar;\n  satrec.ecco = xecco;\n  satrec.argpo = xargpo;\n  satrec.inclo = xinclo;\n  satrec.mo = xmo;\n  satrec.no = xno;\n  satrec.nodeo = xnodeo;\n\n  //  sgp4fix add opsmode\n  satrec.operationmode = opsmode;\n\n  // ------------------------ earth constants -----------------------\n  // sgp4fix identify constants and allow alternate values\n\n  var ss = 78.0 / earthRadius + 1.0;\n  // sgp4fix use multiply for speed instead of pow\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\n  satrec.init = 'y';\n  satrec.t = 0.0;\n  var initlOptions = {\n    satn: satn,\n    ecco: satrec.ecco,\n    epoch: epoch,\n    inclo: satrec.inclo,\n    no: satrec.no,\n    method: satrec.method,\n    opsmode: satrec.operationmode\n  };\n  var initlResult = initl(initlOptions);\n  var ao = initlResult.ao,\n    con42 = initlResult.con42,\n    cosio = initlResult.cosio,\n    cosio2 = initlResult.cosio2,\n    eccsq = initlResult.eccsq,\n    omeosq = initlResult.omeosq,\n    posq = initlResult.posq,\n    rp = initlResult.rp,\n    rteosq = initlResult.rteosq,\n    sinio = initlResult.sinio;\n  satrec.no = initlResult.no;\n  satrec.con41 = initlResult.con41;\n  satrec.gsto = initlResult.gsto;\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0;\n  satrec.error = 0;\n\n  // sgp4fix remove this check as it is unnecessary\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\n  // condition is below the surface of te earth\n  // if (rp < 1.0)\n  // {\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\n  //   satrec.error = 5;\n  // }\n\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\n    satrec.isimp = 0;\n    if (rp < 220.0 / earthRadius + 1.0) {\n      satrec.isimp = 1;\n    }\n    sfour = ss;\n    qzms24 = qzms2t;\n    perige = (rp - 1.0) * earthRadius;\n\n    // - for perigees below 156 km, s and qoms2t are altered -\n    if (perige < 156.0) {\n      sfour = perige - 78.0;\n      if (perige < 98.0) {\n        sfour = 20.0;\n      }\n\n      // sgp4fix use multiply for speed instead of pow\n      var qzms24temp = (120.0 - sfour) / earthRadius;\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\n      sfour = sfour / earthRadius + 1.0;\n    }\n    pinvsq = 1.0 / posq;\n    tsi = 1.0 / (ao - sfour);\n    satrec.eta = ao * satrec.ecco * tsi;\n    etasq = satrec.eta * satrec.eta;\n    eeta = satrec.ecco * satrec.eta;\n    psisq = Math.abs(1.0 - etasq);\n    coef = qzms24 * Math.pow(tsi, 4.0);\n    coef1 = coef / Math.pow(psisq, 3.5);\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\n    satrec.cc1 = satrec.bstar * cc2;\n    cc3 = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\n    }\n    satrec.x1mth2 = 1.0 - cosio2;\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\n    cosio4 = cosio2 * cosio2;\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\n    xhdot1 = -temp1 * cosio;\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\n    xpidot = satrec.argpdot + satrec.nodedot;\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\n    satrec.xmcof = 0.0;\n    if (satrec.ecco > 1.0e-4) {\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\n    }\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\n    satrec.t2cof = 1.5 * satrec.cc1;\n\n    // sgp4fix for divide by zero with xinco = 180 deg\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\n    } else {\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\n    }\n    satrec.aycof = -0.5 * j3oj2 * sinio;\n\n    // sgp4fix use multiply for speed instead of pow\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\n    satrec.sinmao = Math.sin(satrec.mo);\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0;\n\n    // --------------- deep space initialization -------------\n    if (2 * pi / satrec.no >= 225.0) {\n      satrec.method = 'd';\n      satrec.isimp = 1;\n      tc = 0.0;\n      inclm = satrec.inclo;\n      var dscomOptions = {\n        epoch: epoch,\n        ep: satrec.ecco,\n        argpp: satrec.argpo,\n        tc: tc,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        np: satrec.no,\n        e3: satrec.e3,\n        ee2: satrec.ee2,\n        peo: satrec.peo,\n        pgho: satrec.pgho,\n        pho: satrec.pho,\n        pinco: satrec.pinco,\n        plo: satrec.plo,\n        se2: satrec.se2,\n        se3: satrec.se3,\n        sgh2: satrec.sgh2,\n        sgh3: satrec.sgh3,\n        sgh4: satrec.sgh4,\n        sh2: satrec.sh2,\n        sh3: satrec.sh3,\n        si2: satrec.si2,\n        si3: satrec.si3,\n        sl2: satrec.sl2,\n        sl3: satrec.sl3,\n        sl4: satrec.sl4,\n        xgh2: satrec.xgh2,\n        xgh3: satrec.xgh3,\n        xgh4: satrec.xgh4,\n        xh2: satrec.xh2,\n        xh3: satrec.xh3,\n        xi2: satrec.xi2,\n        xi3: satrec.xi3,\n        xl2: satrec.xl2,\n        xl3: satrec.xl3,\n        xl4: satrec.xl4,\n        zmol: satrec.zmol,\n        zmos: satrec.zmos\n      };\n      var dscomResult = dscom(dscomOptions);\n      satrec.e3 = dscomResult.e3;\n      satrec.ee2 = dscomResult.ee2;\n      satrec.peo = dscomResult.peo;\n      satrec.pgho = dscomResult.pgho;\n      satrec.pho = dscomResult.pho;\n      satrec.pinco = dscomResult.pinco;\n      satrec.plo = dscomResult.plo;\n      satrec.se2 = dscomResult.se2;\n      satrec.se3 = dscomResult.se3;\n      satrec.sgh2 = dscomResult.sgh2;\n      satrec.sgh3 = dscomResult.sgh3;\n      satrec.sgh4 = dscomResult.sgh4;\n      satrec.sh2 = dscomResult.sh2;\n      satrec.sh3 = dscomResult.sh3;\n      satrec.si2 = dscomResult.si2;\n      satrec.si3 = dscomResult.si3;\n      satrec.sl2 = dscomResult.sl2;\n      satrec.sl3 = dscomResult.sl3;\n      satrec.sl4 = dscomResult.sl4;\n      sinim = dscomResult.sinim;\n      cosim = dscomResult.cosim;\n      em = dscomResult.em;\n      emsq = dscomResult.emsq;\n      s1 = dscomResult.s1;\n      s2 = dscomResult.s2;\n      s3 = dscomResult.s3;\n      s4 = dscomResult.s4;\n      s5 = dscomResult.s5;\n      ss1 = dscomResult.ss1;\n      ss2 = dscomResult.ss2;\n      ss3 = dscomResult.ss3;\n      ss4 = dscomResult.ss4;\n      ss5 = dscomResult.ss5;\n      sz1 = dscomResult.sz1;\n      sz3 = dscomResult.sz3;\n      sz11 = dscomResult.sz11;\n      sz13 = dscomResult.sz13;\n      sz21 = dscomResult.sz21;\n      sz23 = dscomResult.sz23;\n      sz31 = dscomResult.sz31;\n      sz33 = dscomResult.sz33;\n      satrec.xgh2 = dscomResult.xgh2;\n      satrec.xgh3 = dscomResult.xgh3;\n      satrec.xgh4 = dscomResult.xgh4;\n      satrec.xh2 = dscomResult.xh2;\n      satrec.xh3 = dscomResult.xh3;\n      satrec.xi2 = dscomResult.xi2;\n      satrec.xi3 = dscomResult.xi3;\n      satrec.xl2 = dscomResult.xl2;\n      satrec.xl3 = dscomResult.xl3;\n      satrec.xl4 = dscomResult.xl4;\n      satrec.zmol = dscomResult.zmol;\n      satrec.zmos = dscomResult.zmos;\n      nm = dscomResult.nm;\n      z1 = dscomResult.z1;\n      z3 = dscomResult.z3;\n      z11 = dscomResult.z11;\n      z13 = dscomResult.z13;\n      z21 = dscomResult.z21;\n      z23 = dscomResult.z23;\n      z31 = dscomResult.z31;\n      z33 = dscomResult.z33;\n      var dpperOptions = {\n        inclo: inclm,\n        init: satrec.init,\n        ep: satrec.ecco,\n        inclp: satrec.inclo,\n        nodep: satrec.nodeo,\n        argpp: satrec.argpo,\n        mp: satrec.mo,\n        opsmode: satrec.operationmode\n      };\n      var dpperResult = dpper(satrec, dpperOptions);\n      satrec.ecco = dpperResult.ep;\n      satrec.inclo = dpperResult.inclp;\n      satrec.nodeo = dpperResult.nodep;\n      satrec.argpo = dpperResult.argpp;\n      satrec.mo = dpperResult.mp;\n      argpm = 0.0;\n      nodem = 0.0;\n      mm = 0.0;\n      var dsinitOptions = {\n        cosim: cosim,\n        emsq: emsq,\n        argpo: satrec.argpo,\n        s1: s1,\n        s2: s2,\n        s3: s3,\n        s4: s4,\n        s5: s5,\n        sinim: sinim,\n        ss1: ss1,\n        ss2: ss2,\n        ss3: ss3,\n        ss4: ss4,\n        ss5: ss5,\n        sz1: sz1,\n        sz3: sz3,\n        sz11: sz11,\n        sz13: sz13,\n        sz21: sz21,\n        sz23: sz23,\n        sz31: sz31,\n        sz33: sz33,\n        t: satrec.t,\n        tc: tc,\n        gsto: satrec.gsto,\n        mo: satrec.mo,\n        mdot: satrec.mdot,\n        no: satrec.no,\n        nodeo: satrec.nodeo,\n        nodedot: satrec.nodedot,\n        xpidot: xpidot,\n        z1: z1,\n        z3: z3,\n        z11: z11,\n        z13: z13,\n        z21: z21,\n        z23: z23,\n        z31: z31,\n        z33: z33,\n        ecco: satrec.ecco,\n        eccsq: eccsq,\n        em: em,\n        argpm: argpm,\n        inclm: inclm,\n        mm: mm,\n        nm: nm,\n        nodem: nodem,\n        irez: satrec.irez,\n        atime: satrec.atime,\n        d2201: satrec.d2201,\n        d2211: satrec.d2211,\n        d3210: satrec.d3210,\n        d3222: satrec.d3222,\n        d4410: satrec.d4410,\n        d4422: satrec.d4422,\n        d5220: satrec.d5220,\n        d5232: satrec.d5232,\n        d5421: satrec.d5421,\n        d5433: satrec.d5433,\n        dedt: satrec.dedt,\n        didt: satrec.didt,\n        dmdt: satrec.dmdt,\n        dnodt: satrec.dnodt,\n        domdt: satrec.domdt,\n        del1: satrec.del1,\n        del2: satrec.del2,\n        del3: satrec.del3,\n        xfact: satrec.xfact,\n        xlamo: satrec.xlamo,\n        xli: satrec.xli,\n        xni: satrec.xni\n      };\n      var dsinitResult = dsinit(dsinitOptions);\n      satrec.irez = dsinitResult.irez;\n      satrec.atime = dsinitResult.atime;\n      satrec.d2201 = dsinitResult.d2201;\n      satrec.d2211 = dsinitResult.d2211;\n      satrec.d3210 = dsinitResult.d3210;\n      satrec.d3222 = dsinitResult.d3222;\n      satrec.d4410 = dsinitResult.d4410;\n      satrec.d4422 = dsinitResult.d4422;\n      satrec.d5220 = dsinitResult.d5220;\n      satrec.d5232 = dsinitResult.d5232;\n      satrec.d5421 = dsinitResult.d5421;\n      satrec.d5433 = dsinitResult.d5433;\n      satrec.dedt = dsinitResult.dedt;\n      satrec.didt = dsinitResult.didt;\n      satrec.dmdt = dsinitResult.dmdt;\n      satrec.dnodt = dsinitResult.dnodt;\n      satrec.domdt = dsinitResult.domdt;\n      satrec.del1 = dsinitResult.del1;\n      satrec.del2 = dsinitResult.del2;\n      satrec.del3 = dsinitResult.del3;\n      satrec.xfact = dsinitResult.xfact;\n      satrec.xlamo = dsinitResult.xlamo;\n      satrec.xli = dsinitResult.xli;\n      satrec.xni = dsinitResult.xni;\n    }\n\n    // ----------- set variables if not deep space -----------\n    if (satrec.isimp !== 1) {\n      cc1sq = satrec.cc1 * satrec.cc1;\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\n      satrec.d3 = (17.0 * ao + sfour) * temp;\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\n    }\n\n    /* finally propogate to zero epoch to initialize all others. */\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\n    // if(satrec.error == 0)\n  }\n\n  sgp4(satrec, 0);\n  satrec.init = 'n';\n\n  /* eslint-enable no-param-reassign */\n}\n\n/* -----------------------------------------------------------------------------\n *\n *                           function twoline2rv\n *\n *  this function converts the two line element set character string data to\n *    variables and initializes the sgp4 variables. several intermediate varaibles\n *    and quantities are determined. note that the result is a structure so multiple\n *    satellites can be processed simultaneously without having to reinitialize. the\n *    verification mode is an important option that permits quick checks of any\n *    changes to the underlying technical theory. this option works using a\n *    modified tle file in which the start, stop, and delta time values are\n *    included at the end of the second line of data. this only works with the\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\n *    from epoch and is useful when performing entire catalog runs.\n *\n *  author        : david vallado                  719-573-2600    1 mar 2001\n *\n *  inputs        :\n *    longstr1    - first line of the tle\n *    longstr2    - second line of the tle\n *    typerun     - type of run                    verification 'v', catalog 'c',\n *                                                 manual 'm'\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\n *    whichconst  - which set of constants to use  72, 84\n *\n *  outputs       :\n *    satrec      - structure containing all the sgp4 satellite information\n *\n *  coupling      :\n *    getgravconst-\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\n *    jday        - convert day month year hour minute second into julian date\n *    sgp4init    - initialize the sgp4 variables\n *\n *  references    :\n *    norad spacetrack report #3\n *    vallado, crawford, hujsak, kelso  2006\n --------------------------------------------------------------------------- */\n\n/**\n * Return a Satellite imported from two lines of TLE data.\n *\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\n * and select which standard set of gravitational constants you want\n * by providing `gravity_constants`:\n *\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\n *\n * Normally, computations are made using letious recent improvements\n * to the algorithm.  If you want to turn some of these off and go\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\n */\nfunction twoline2satrec(longstr1, longstr2) {\n  var opsmode = 'i';\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\n  var year = 0;\n  var satrec = {};\n  satrec.error = 0;\n  satrec.satnum = longstr1.substring(2, 7);\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61)));\n\n  // satrec.satnum = longstr2.substring(2, 7);\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\n  satrec.no = parseFloat(longstr2.substring(52, 63));\n\n  // ---- find no, ndot, nddot ----\n  satrec.no /= xpdotp; //   rad/min\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\n\n  // ---- convert to sgp4 units ----\n  // satrec.ndot /= (xpdotp * 1440.0); // ? * minperday\n  // satrec.nddot /= (xpdotp * 1440.0 * 1440);\n\n  // ---- find standard orbital elements ----\n  satrec.inclo *= deg2rad;\n  satrec.nodeo *= deg2rad;\n  satrec.argpo *= deg2rad;\n  satrec.mo *= deg2rad;\n\n  // ----------------------------------------------------------------\n  // find sgp4epoch time of element set\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\n  // and minutes from the epoch (time)\n  // ----------------------------------------------------------------\n\n  // ---------------- temp fix for years from 1957-2056 -------------------\n  // --------- correct fix will occur when year is 4-digit in tle ---------\n\n  if (satrec.epochyr < 57) {\n    year = satrec.epochyr + 2000;\n  } else {\n    year = satrec.epochyr + 1900;\n  }\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\n  var mon = mdhmsResult.mon,\n    day = mdhmsResult.day,\n    hr = mdhmsResult.hr,\n    minute = mdhmsResult.minute,\n    sec = mdhmsResult.sec;\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec);\n\n  //  ---------------- initialize the orbit at sgp4epoch -------------------\n  sgp4init(satrec, {\n    opsmode: opsmode,\n    satn: satrec.satnum,\n    epoch: satrec.jdsatepoch - 2433281.5,\n    xbstar: satrec.bstar,\n    xecco: satrec.ecco,\n    xargpo: satrec.argpo,\n    xinclo: satrec.inclo,\n    xmo: satrec.mo,\n    xno: satrec.no,\n    xnodeo: satrec.nodeo\n  });\n  return satrec;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction propagate() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  // Return a position and velocity vector for a given date and time.\n  var satrec = args[0];\n  var date = Array.prototype.slice.call(args, 1);\n  var j = jday.apply(void 0, _toConsumableArray(date));\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\n  return sgp4(satrec, m);\n}\n\nfunction dopplerFactor(location, position, velocity) {\n  var mfactor = 7.292115E-5;\n  var c = 299792.458; // Speed of light in km/s\n\n  var range = {\n    x: position.x - location.x,\n    y: position.y - location.y,\n    z: position.z - location.z\n  };\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\n  var rangeVel = {\n    x: velocity.x + mfactor * location.y,\n    y: velocity.y - mfactor * location.x,\n    z: velocity.z\n  };\n  function sign(value) {\n    return value >= 0 ? 1 : -1;\n  }\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\n  return 1 + rangeRate / c * sign(rangeRate);\n}\n\nfunction radiansToDegrees(radians) {\n  return radians * rad2deg;\n}\nfunction degreesToRadians(degrees) {\n  return degrees * deg2rad;\n}\nfunction degreesLat(radians) {\n  if (radians < -pi / 2 || radians > pi / 2) {\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction degreesLong(radians) {\n  if (radians < -pi || radians > pi) {\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\n  }\n  return radiansToDegrees(radians);\n}\nfunction radiansLat(degrees) {\n  if (degrees < -90 || degrees > 90) {\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction radiansLong(degrees) {\n  if (degrees < -180 || degrees > 180) {\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\n  }\n  return degreesToRadians(degrees);\n}\nfunction geodeticToEcf(geodetic) {\n  var longitude = geodetic.longitude,\n    latitude = geodetic.latitude,\n    height = geodetic.height;\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction eciToGeodetic(eci, gmst) {\n  // http://www.celestrak.com/columns/v02n03/\n  var a = 6378.137;\n  var b = 6356.7523142;\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\n  var f = (a - b) / a;\n  var e2 = 2 * f - f * f;\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\n  while (longitude < -pi) {\n    longitude += twoPi;\n  }\n  while (longitude > pi) {\n    longitude -= twoPi;\n  }\n  var kmax = 20;\n  var k = 0;\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\n  var C;\n  while (k < kmax) {\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\n    k += 1;\n  }\n  var height = R / Math.cos(latitude) - a * C;\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    height: height\n  };\n}\nfunction ecfToEci(ecf, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\n  var Z = ecf.z;\n  return {\n    x: X,\n    y: Y,\n    z: Z\n  };\n}\nfunction eciToEcf(eci, gmst) {\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\n  //\n  // [X]     [C -S  0][X]\n  // [Y]  =  [S  C  0][Y]\n  // [Z]eci  [0  0  1][Z]ecf\n  //\n  //\n  // Inverse:\n  // [X]     [C  S  0][X]\n  // [Y]  =  [-S C  0][Y]\n  // [Z]ecf  [0  0  1][Z]eci\n\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\n  var z = eci.z;\n  return {\n    x: x,\n    y: y,\n    z: z\n  };\n}\nfunction topocentric(observerGeodetic, satelliteEcf) {\n  // http://www.celestrak.com/columns/v02n02/\n  // TS Kelso's method, except I'm using ECF frame\n  // and he uses ECI.\n\n  var longitude = observerGeodetic.longitude,\n    latitude = observerGeodetic.latitude;\n  var observerEcf = geodeticToEcf(observerGeodetic);\n  var rx = satelliteEcf.x - observerEcf.x;\n  var ry = satelliteEcf.y - observerEcf.y;\n  var rz = satelliteEcf.z - observerEcf.z;\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\n  return {\n    topS: topS,\n    topE: topE,\n    topZ: topZ\n  };\n}\n\n/**\n * @param {Object} tc\n * @param {Number} tc.topS Positive horizontal vector S due south.\n * @param {Number} tc.topE Positive horizontal vector E due east.\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\n * @returns {Object}\n */\nfunction topocentricToLookAngles(tc) {\n  var topS = tc.topS,\n    topE = tc.topE,\n    topZ = tc.topZ;\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\n  var El = Math.asin(topZ / rangeSat);\n  var Az = Math.atan2(-topE, topS) + pi;\n  return {\n    azimuth: Az,\n    elevation: El,\n    rangeSat: rangeSat // Range in km\n  };\n}\n\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\n  return topocentricToLookAngles(topocentricCoords);\n}\n\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };\n"],"mappings":"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,KAAK,EAAEA,KAAK;IACZkE,IAAI,EAAEA,IAAI;IACVzG,EAAE,EAAEA;EACN,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoK,IAAIA,CAAC7T,MAAM,EAAE8T,MAAM,EAAE;EAC5B;;EAEA,IAAIC,MAAM;EACV,IAAIC,MAAM;EACV,IAAIrR,KAAK;EACT,IAAIC,KAAK;EACT,IAAI0M,MAAM;EACV,IAAI2E,IAAI;EACR,IAAIC,MAAM;EACV,IAAIC,GAAG;EACP,IAAItI,KAAK;EACT,IAAItJ,KAAK;EACT,IAAI6R,EAAE;EACN,IAAIC,EAAE;EACN,IAAIC,EAAE;EACN,IAAIpP,EAAE;EACN,IAAIqP,IAAI;EACR,IAAIlW,IAAI;EACR,IAAImW,KAAK;EACT,IAAIC,KAAK;EACT,IAAIC,KAAK;EACT,IAAI5I,KAAK;EACT,IAAIC,EAAE;EACN,IAAItC,EAAE;EACN,IAAIuC,KAAK;EACT,IAAI2I,KAAK;EACT,IAAIC,GAAG;EACP,IAAIpS,EAAE;EACN,IAAIF,KAAK;;EAET;EACA;EACA;EACA;;EAEA,IAAIuS,KAAK,GAAG,OAAO;;EAEnB;EACA7U,MAAM,CAACqB,CAAC,GAAGyS,MAAM;EACjB9T,MAAM,CAAC8U,KAAK,GAAG,CAAC;;EAEhB;EACA,IAAIC,IAAI,GAAG/U,MAAM,CAACqL,EAAE,GAAGrL,MAAM,CAACsL,IA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}